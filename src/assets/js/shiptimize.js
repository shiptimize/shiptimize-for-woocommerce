/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/shiptimize-for-woocommerce/assets/js";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./shiptmize.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./css/leaflet.css":
/*!*************************!*\
  !*** ./css/leaflet.css ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jc3MvbGVhZmxldC5jc3M/OTU1NSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiIuL2Nzcy9sZWFmbGV0LmNzcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./css/leaflet.css\n");

/***/ }),

/***/ "./js/shiptimize-gmaps.js":
/*!********************************!*\
  !*** ./js/shiptimize-gmaps.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shiptimizeUtils = __webpack_require__(/*! ./shiptimize-utils.js */ \"./js/shiptimize-utils.js\");\n\nvar _shiptimizeUtils2 = _interopRequireDefault(_shiptimizeUtils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ShiptimizeGmaps = function () {\n    function ShiptimizeGmaps(key) {\n        _classCallCheck(this, ShiptimizeGmaps);\n\n        this.isScriptLoaded = false;\n        this.markers = [];\n        this.map = null;\n        this.pickupPoints = [];\n        this.key = key;\n\n        /** \n         * the root url for the icons it's different for every platform  \n         * make sure to include a trailing / \n         */\n        this.icon_folder = typeof shiptimize_icon_folder != 'undefined' ? shiptimize_icon_folder : '';\n        this.icon_selected = this.icon_folder + 'selected.png';\n        this.icon_default = this.icon_folder + 'default.png';\n        this.current_icon = this.icon_default;\n    }\n\n    /** \n     * Checks if we have an icon for this carrier.\n     * If yes then change the carrier icon\n     * If not then use the default icon\n     * \n     * @param int carrier_id - the carrier id \n     */\n\n\n    _createClass(ShiptimizeGmaps, [{\n        key: 'setCarrierIcon',\n        value: function setCarrierIcon(carrier_id) {\n            var carrier_icon_url = this.icon_folder + '' + carrier_id + '.png';\n            //this.current_icon = Utils.isUrlValid(carrier_icon_url) ?  carrier_icon_url : this.icon_default; \n            this.current_icon = carrier_icon_url;\n        }\n\n        /** \n         * if the script has not been loaded , load it \n         */\n\n    }, {\n        key: 'grantReady',\n        value: function grantReady() {\n            if (!this.isScriptLoaded) {\n                this.loadScript();\n            }\n        }\n    }, {\n        key: 'loadScript',\n        value: function loadScript() {\n            _shiptimizeUtils2.default.injectExternalScript(\"https://maps.googleapis.com/maps/api/js?key=\" + this.key + \"&callback=shiptimize.loadMap\");\n            this.isScriptLoaded = true;\n        }\n\n        /** \n         * Load the map into the element \n         * This function needs the script to be loaded \n         */\n\n    }, {\n        key: 'loadMap',\n        value: function loadMap() {\n            console.log(\"displaying map on container with \" + jQuery(\".shiptimize-pickup__map\").width() + \" \" + jQuery(\".shiptimize-pickup__map\").height(), jQuery(\".shiptimize-pickup__map\").get(0));\n            this.map = new google.maps.Map(jQuery(\".shiptimize-pickup__map\").get(0), {\n                center: { lat: -34.397, lng: 150.644 },\n                zoom: 16,\n                mapTypeControl: false\n            });\n        }\n\n        /** \n         * center the map \n         */\n\n    }, {\n        key: 'centerMap',\n        value: function centerMap(lat, lng) {\n            this.map.setCenter(new google.maps.LatLng(lat, lng));\n        }\n\n        /** \n         * Extract the country code from a geocode result\n         * @param geocode - a google.maps.Geocoder result \n         * @return string alpha-2 code for the country name \n         */\n\n    }, {\n        key: 'getCountryCodeFromResult',\n        value: function getCountryCodeFromResult(geocode) {\n            if (typeof geocode.address_components == \"undefined\") {\n                return \"\";\n            }\n\n            var components = geocode.address_components;\n            for (var i = 0; i < components.length; ++i) {\n                var types = components[i].types;\n\n                for (var j = 0; j < types.length; ++j) {\n                    if (types[j] == 'country') {\n                        return components[i].short_name;\n                    }\n                }\n            }\n        }\n\n        /**\n         *  \n         * @param shippingData, the address parts       \n         * @param f_callback , the function to call when all mighty google returns a result \n         */\n\n    }, {\n        key: 'geocode',\n        value: function geocode(shippingData, f_callback) {\n            var _this = this;\n\n            if (typeof google == 'undefined') {\n                //script not loaded yet\n                setTimeout(function () {\n                    _this.geocode(shippingData, f_callback);\n                }, 200);\n                return;\n            }\n\n            var geocoder = new google.maps.Geocoder();\n            var me = this;\n\n            var address = shippingData.Address.Streetname1 + \" \" + shippingData.Address.Streetname2 + \" \" + shippingData.Address.postalCode + \" \" + shippingData.Address.City + \" \" + shippingData.Address.State + \" \" + shippingData.Address.Country;\n            console.log('geocoding ' + address);\n\n            geocoder.geocode({ 'address': address }, function (results, status) {\n                var geocode = { iso2: '', lat: '', lng: '' };\n\n                if (status == 'OK') {\n                    geocode = results[0];\n                } else {\n                    console.log('Geocode was not successful for the following reason: ' + status);\n                    f_callback(geocode);\n                    return;\n                }\n\n                var latlng = geocode.geometry.location;\n\n                geocode.iso2 = me.getCountryCodeFromResult(geocode);\n                geocode.lat = latlng.lat();\n                geocode.lng = latlng.lng();\n\n                f_callback(geocode);\n            });\n        }\n    }, {\n        key: 'clearMarkers',\n        value: function clearMarkers() {\n            if (this.markers.length > 0) {\n                for (var i = 0; i < this.markers.length; ++i) {\n                    this.markers[i].setMap(null);\n                }\n\n                this.markers = [];\n            }\n        }\n\n        /** \n         * Add the markers to map \n         * @param array pickupPoints - an array of pickupPoints\n         * @param callback - a function to call when the marker is clicked \n         */\n\n    }, {\n        key: 'addMarkers',\n        value: function addMarkers(pickupPoints, callback) {\n            var _this2 = this;\n\n            this.pickupPoints = pickupPoints;\n\n            var _loop = function _loop(x) {\n                _this2.markers[x] = _this2.getMarker(pickupPoints[x]);\n                //    we need to do this because the values for lat,lng we have are rounded, so they will not match the ones returned by google\n                pickupPoints[x].marker = _this2.markers[x];\n\n                _this2.markers[x].addListener('click', function () {\n                    if (typeof callback != 'undefined') {\n                        callback(x);\n                    }\n                });\n            };\n\n            for (var x = 0; x < pickupPoints.length; ++x) {\n                _loop(x);\n            }\n\n            this.fitBounds();\n        }\n\n        /** \n         * Return a marker for the gmaps \n         */\n\n    }, {\n        key: 'getMarker',\n        value: function getMarker(pickupPoint, callback) {\n            var marker = new google.maps.Marker({\n                position: new google.maps.LatLng(pickupPoint.Lat, pickupPoint.Long),\n                map: this.map,\n                icon: {\n                    url: this.current_icon,\n                    scaledSize: new google.maps.Size(50, 50), // scaled size\n                    origin: new google.maps.Point(0, 0), // origin\n                    anchor: new google.maps.Point(0, 0) // anchor\n                }\n            });\n\n            return marker;\n        }\n    }, {\n        key: 'fitBounds',\n        value: function fitBounds() {\n            var bounds = new google.maps.LatLngBounds();\n            for (var x = 0; x < this.markers.length; ++x) {\n                bounds.extend(this.markers[x].getPosition());\n            }\n            this.map.fitBounds(bounds);\n        }\n\n        /**\n         * Reset all markers  \n         * Select the marker of index idx in map \n         * @param int idx - the index to select \n         */\n\n    }, {\n        key: 'selectMarkerByIdx',\n        value: function selectMarkerByIdx(idx) {\n            var selected = {\n                url: this.icon_selected,\n                scaledSize: new google.maps.Size(50, 50), // scaled size\n                origin: new google.maps.Point(0, 0), // origin\n                anchor: new google.maps.Point(0, 0) // anchor\n            };\n            var curr = {\n                url: this.current_icon,\n                scaledSize: new google.maps.Size(50, 50), // scaled size\n                origin: new google.maps.Point(0, 0), // origin\n                anchor: new google.maps.Point(0, 0) // anchor\n            };\n\n            for (var i = 0; i < this.markers.length; ++i) {\n                this.markers[i].setIcon(idx == i ? selected : curr);\n            }\n        }\n    }]);\n\n    return ShiptimizeGmaps;\n}();\n\nexports.default = ShiptimizeGmaps;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9zaGlwdGltaXplLWdtYXBzLmpzPzBiZjEiXSwibmFtZXMiOlsiU2hpcHRpbWl6ZUdtYXBzIiwia2V5IiwiaXNTY3JpcHRMb2FkZWQiLCJtYXJrZXJzIiwibWFwIiwicGlja3VwUG9pbnRzIiwiaWNvbl9mb2xkZXIiLCJzaGlwdGltaXplX2ljb25fZm9sZGVyIiwiaWNvbl9zZWxlY3RlZCIsImljb25fZGVmYXVsdCIsImN1cnJlbnRfaWNvbiIsImNhcnJpZXJfaWQiLCJjYXJyaWVyX2ljb25fdXJsIiwibG9hZFNjcmlwdCIsIlV0aWxzIiwiaW5qZWN0RXh0ZXJuYWxTY3JpcHQiLCJjb25zb2xlIiwibG9nIiwialF1ZXJ5Iiwid2lkdGgiLCJoZWlnaHQiLCJnZXQiLCJnb29nbGUiLCJtYXBzIiwiTWFwIiwiY2VudGVyIiwibGF0IiwibG5nIiwiem9vbSIsIm1hcFR5cGVDb250cm9sIiwic2V0Q2VudGVyIiwiTGF0TG5nIiwiZ2VvY29kZSIsImFkZHJlc3NfY29tcG9uZW50cyIsImNvbXBvbmVudHMiLCJpIiwibGVuZ3RoIiwidHlwZXMiLCJqIiwic2hvcnRfbmFtZSIsInNoaXBwaW5nRGF0YSIsImZfY2FsbGJhY2siLCJzZXRUaW1lb3V0IiwiZ2VvY29kZXIiLCJHZW9jb2RlciIsIm1lIiwiYWRkcmVzcyIsIkFkZHJlc3MiLCJTdHJlZXRuYW1lMSIsIlN0cmVldG5hbWUyIiwicG9zdGFsQ29kZSIsIkNpdHkiLCJTdGF0ZSIsIkNvdW50cnkiLCJyZXN1bHRzIiwic3RhdHVzIiwiaXNvMiIsImxhdGxuZyIsImdlb21ldHJ5IiwibG9jYXRpb24iLCJnZXRDb3VudHJ5Q29kZUZyb21SZXN1bHQiLCJzZXRNYXAiLCJjYWxsYmFjayIsIngiLCJnZXRNYXJrZXIiLCJtYXJrZXIiLCJhZGRMaXN0ZW5lciIsImZpdEJvdW5kcyIsInBpY2t1cFBvaW50IiwiTWFya2VyIiwicG9zaXRpb24iLCJMYXQiLCJMb25nIiwiaWNvbiIsInVybCIsInNjYWxlZFNpemUiLCJTaXplIiwib3JpZ2luIiwiUG9pbnQiLCJhbmNob3IiLCJib3VuZHMiLCJMYXRMbmdCb3VuZHMiLCJleHRlbmQiLCJnZXRQb3NpdGlvbiIsImlkeCIsInNlbGVjdGVkIiwiY3VyciIsInNldEljb24iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7O0lBRXFCQSxlO0FBRWpCLDZCQUFZQyxHQUFaLEVBQWlCO0FBQUE7O0FBQ2IsYUFBS0MsY0FBTCxHQUFzQixLQUF0QjtBQUNBLGFBQUtDLE9BQUwsR0FBZSxFQUFmO0FBQ0EsYUFBS0MsR0FBTCxHQUFXLElBQVg7QUFDQSxhQUFLQyxZQUFMLEdBQW9CLEVBQXBCO0FBQ0EsYUFBS0osR0FBTCxHQUFXQSxHQUFYOztBQUVBOzs7O0FBSUEsYUFBS0ssV0FBTCxHQUFtQixPQUFPQyxzQkFBUCxJQUFrQyxXQUFsQyxHQUFpREEsc0JBQWpELEdBQTBFLEVBQTdGO0FBQ0EsYUFBS0MsYUFBTCxHQUFxQixLQUFLRixXQUFMLEdBQWlCLGNBQXRDO0FBQ0EsYUFBS0csWUFBTCxHQUFvQixLQUFLSCxXQUFMLEdBQWlCLGFBQXJDO0FBQ0EsYUFBS0ksWUFBTCxHQUFvQixLQUFLRCxZQUF6QjtBQUNIOztBQUdEOzs7Ozs7Ozs7Ozt1Q0FPZUUsVSxFQUFXO0FBQ3hCLGdCQUFJQyxtQkFBbUIsS0FBS04sV0FBTCxHQUFpQixFQUFqQixHQUFvQkssVUFBcEIsR0FBK0IsTUFBdEQ7QUFDQTtBQUNBLGlCQUFLRCxZQUFMLEdBQW9CRSxnQkFBcEI7QUFDRDs7QUFHRDs7Ozs7O3FDQUdhO0FBQ1QsZ0JBQUksQ0FBQyxLQUFLVixjQUFWLEVBQTBCO0FBQ3RCLHFCQUFLVyxVQUFMO0FBQ0g7QUFDSjs7O3FDQUVZO0FBQ1RDLHNDQUFNQyxvQkFBTixDQUEyQixpREFBaUQsS0FBS2QsR0FBdEQsR0FBNEQsOEJBQXZGO0FBQ0EsaUJBQUtDLGNBQUwsR0FBc0IsSUFBdEI7QUFDSDs7QUFFRDs7Ozs7OztrQ0FJVTtBQUNOYyxvQkFBUUMsR0FBUixDQUFZLHND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QUFJQyxXQUFXO0FBQ1BYLHFCQUFNLEtBQUtsRSxhQURKO0FBRVBtRSw0QkFBWSxJQUFJckQsT0FBT0MsSUFBUCxDQUFZcUQsSUFBaEIsQ0FBcUIsRUFBckIsRUFBeUIsRUFBekIsQ0FGTCxFQUVtQztBQUMxQ0Msd0JBQVEsSUFBSXZELE9BQU9DLElBQVAsQ0FBWXVELEtBQWhCLENBQXNCLENBQXRCLEVBQXdCLENBQXhCLENBSEQsRUFHNkI7QUFDcENDLHdCQUFRLElBQUl6RCxPQUFPQyxJQUFQLENBQVl1RCxLQUFoQixDQUFzQixDQUF0QixFQUF5QixDQUF6QixDQUpELENBSTZCO0FBSjdCLGFBQWY7QUFNQSxnQkFBSVEsT0FBTztBQUNIWixxQkFBTSxLQUFLaEUsWUFEUjtBQUVIaUUsNEJBQVksSUFBSXJELE9BQU9DLElBQVAsQ0FBWXFELElBQWhCLENBQXFCLEVBQXJCLEVBQXlCLEVBQXpCLENBRlQsRUFFdUM7QUFDMUNDLHdCQUFRLElBQUl2RCxPQUFPQyxJQUFQLENBQVl1RCxLQUFoQixDQUFzQixDQUF0QixFQUF3QixDQUF4QixDQUhMLEVBR2lDO0FBQ3BDQyx3QkFBUSxJQUFJekQsT0FBT0MsSUFBUCxDQUFZdUQsS0FBaEIsQ0FBc0IsQ0FBdEIsRUFBeUIsQ0FBekIsQ0FKTCxDQUlpQztBQUpqQyxhQUFYOztBQU9BLGlCQUFLLElBQUkzQyxJQUFJLENBQWIsRUFBZ0JBLElBQUksS0FBS2hDLE9BQUwsQ0FBYWlDLE1BQWpDLEVBQXlDLEVBQUVELENBQTNDLEVBQThDO0FBQzFDLHFCQUFLaEMsT0FBTCxDQUFhZ0MsQ0FBYixFQUFnQm9ELE9BQWhCLENBQ0VILE9BQU9qRCxDQUFQLEdBRUFrRCxRQUZBLEdBSUFDLElBTEY7QUFPSDtBQUNKOzs7Ozs7a0JBMU5nQnRGLGUiLCJmaWxlIjoiLi9qcy9zaGlwdGltaXplLWdtYXBzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFV0aWxzIGZyb20gJy4vc2hpcHRpbWl6ZS11dGlscy5qcyc7ICBcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hpcHRpbWl6ZUdtYXBzIHtcblxuICAgIGNvbnN0cnVjdG9yKGtleSkge1xuICAgICAgICB0aGlzLmlzU2NyaXB0TG9hZGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMubWFya2VycyA9IFtdO1xuICAgICAgICB0aGlzLm1hcCA9IG51bGw7XG4gICAgICAgIHRoaXMucGlja3VwUG9pbnRzID0gW107XG4gICAgICAgIHRoaXMua2V5ID0ga2V5O1xuXG4gICAgICAgIC8qKiBcbiAgICAgICAgICogdGhlIHJvb3QgdXJsIGZvciB0aGUgaWNvbnMgaXQncyBkaWZmZXJlbnQgZm9yIGV2ZXJ5IHBsYXRmb3JtICBcbiAgICAgICAgICogbWFrZSBzdXJlIHRvIGluY2x1ZGUgYSB0cmFpbGluZyAvIFxuICAgICAgICAgKi8gXG4gICAgICAgIHRoaXMuaWNvbl9mb2xkZXIgPSB0eXBlb2Yoc2hpcHRpbWl6ZV9pY29uX2ZvbGRlcikgIT0gJ3VuZGVmaW5lZCcgPyAgc2hpcHRpbWl6ZV9pY29uX2ZvbGRlciA6ICcnOyAgXG4gICAgICAgIHRoaXMuaWNvbl9zZWxlY3RlZCA9IHRoaXMuaWNvbl9mb2xkZXIrJ3NlbGVjdGVkLnBuZyc7XG4gICAgICAgIHRoaXMuaWNvbl9kZWZhdWx0ID0gdGhpcy5pY29uX2ZvbGRlcisnZGVmYXVsdC5wbmcnO1xuICAgICAgICB0aGlzLmN1cnJlbnRfaWNvbiA9IHRoaXMuaWNvbl9kZWZhdWx0OyBcbiAgICB9XG5cblxuICAgIC8qKiBcbiAgICAgKiBDaGVja3MgaWYgd2UgaGF2ZSBhbiBpY29uIGZvciB0aGlzIGNhcnJpZXIuXG4gICAgICogSWYgeWVzIHRoZW4gY2hhbmdlIHRoZSBjYXJyaWVyIGljb25cbiAgICAgKiBJZiBub3QgdGhlbiB1c2UgdGhlIGRlZmF1bHQgaWNvblxuICAgICAqIFxuICAgICAqIEBwYXJhbSBpbnQgY2Fycmllcl9pZCAtIHRoZSBjYXJyaWVyIGlkIFxuICAgICAqLyBcbiAgICBzZXRDYXJyaWVySWNvbihjYXJyaWVyX2lkKXtcbiAgICAgIGxldCBjYXJyaWVyX2ljb25fdXJsID0gdGhpcy5pY29uX2ZvbGRlcisnJytjYXJyaWVyX2lkKycucG5nJzsgXG4gICAgICAvL3RoaXMuY3VycmVudF9pY29uID0gVXRpbHMuaXNVcmxWYWxpZChjYXJyaWVyX2ljb25fdXJsKSA/ICBjYXJyaWVyX2ljb25fdXJsIDogdGhpcy5pY29uX2RlZmF1bHQ7IFxuICAgICAgdGhpcy5jdXJyZW50X2ljb24gPSBjYXJyaWVyX2ljb25fdXJsO1xuICAgIH1cblxuXG4gICAgLyoqIFxuICAgICAqIGlmIHRoZSBzY3JpcHQgaGFzIG5vdCBiZWVuIGxvYWRlZCAsIGxvYWQgaXQgXG4gICAgICovXG4gICAgZ3JhbnRSZWFkeSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLmlzU2NyaXB0TG9hZGVkKSB7XG4gICAgICAgICAgICB0aGlzLmxvYWRTY3JpcHQoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGxvYWRTY3JpcHQoKSB7XG4gICAgICAgIFV0aWxzLmluamVjdEV4dGVybmFsU2NyaXB0KFwiaHR0cHM6Ly9tYXBzLmdvb2dsZWFwaXMuY29tL21hcHMvYXBpL2pzP2tleT1cIiArIHRoaXMua2V5ICsgXCImY2FsbGJhY2s9c2hpcHRpbWl6ZS5sb2FkTWFwXCIpO1xuICAgICAgICB0aGlzLmlzU2NyaXB0TG9hZGVkID0gdHJ1ZTtcbiAgICB9XG5cbiAgICAvKiogXG4gICAgICogTG9hZCB0aGUgbWFwIGludG8gdGhlIGVsZW1lbnQgXG4gICAgICogVGhpcyBmdW5jdGlvbiBuZWVkcyB0aGUgc2NyaXB0IHRvIGJlIGxvYWRlZCBcbiAgICAgKi9cbiAgICBsb2FkTWFwKCkgeyAgICAgICAgXG4gICAgICAgIGNvbnNvbGUubG9nKFwiZGlzcGxheWluZyBtYXAgb24gY29udGFpbmVyIHdpdGggXCIgKyBqUXVlcnkoXCIuc2hpcHRpbWl6ZS1waWNrdXBfX21hcFwiKS53aWR0aCgpICsgXCIgXCIralF1ZXJ5KFwiLnNoaXB0aW1pemUtcGlja3VwX19tYXBcIikuaGVpZ2h0KCkgLGpRdWVyeShcIi5zaGlwdGltaXplLXBpY2t1cF9fbWFwXCIpLmdldCgwKSk7IFxuICAgICAgICB0aGlzLm1hcCA9IG5ldyBnb29nbGUubWFwcy5NYXAoalF1ZXJ5KFwiLnNoaXB0aW1pemUtcGlja3VwX19tYXBcIikuZ2V0KDApLCB7XG4gICAgICAgICAgICBjZW50ZXI6IHsgbGF0OiAtMzQuMzk3LCBsbmc6IDE1MC42NDQgfSxcbiAgICAgICAgICAgIHpvb206IDE2LFxuICAgICAgICAgICAgbWFwVHlwZUNvbnRyb2w6IGZhbHNlLFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiogXG4gICAgICogY2VudGVyIHRoZSBtYXAgXG4gICAgICovXG4gICAgY2VudGVyTWFwKGxhdCwgbG5nKSB7XG4gICAgICAgIHRoaXMubWFwLnNldENlbnRlcihuZXcgZ29vZ2xlLm1hcHMuTGF0TG5nKGxhdCwgbG5nKSk7XG4gICAgfVxuXG4gICAgLyoqIFxuICAgICAqIEV4dHJhY3QgdGhlIGNvdW50cnkgY29kZSBmcm9tIGEgZ2VvY29kZSByZXN1bHRcbiAgICAgKiBAcGFyYW0gZ2VvY29kZSAtIGEgZ29vZ2xlLm1hcHMuR2VvY29kZXIgcmVzdWx0IFxuICAgICAqIEByZXR1cm4gc3RyaW5nIGFscGhhLTIgY29kZSBmb3IgdGhlIGNvdW50cnkgbmFtZSBcbiAgICAgKi8gXG4gICAgZ2V0Q291bnRyeUNvZGVGcm9tUmVzdWx0KGdlb2NvZGUpe1xuICAgICAgaWYodHlwZW9mKGdlb2NvZGUuYWRkcmVzc19jb21wb25lbnRzKSA9PSBcInVuZGVmaW5lZFwiKXtcbiAgICAgICAgcmV0dXJuIFwiXCI7IFxuICAgICAgfVxuXG4gICAgICBsZXQgY29tcG9uZW50cyA9IGdlb2NvZGUuYWRkcmVzc19jb21wb25lbnRzO1xuICAgICAgZm9yKCBsZXQgaT0wOyBpIDwgY29tcG9uZW50cy5sZW5ndGg7ICsraSApe1xuICAgICAgICBsZXQgdHlwZXMgPSBjb21wb25lbnRzW2ldLnR5cGVzOyBcblxuICAgICAgICBmb3IobGV0IGo9MDsgaiA8IHR5cGVzLmxlbmd0aDsgKytqICl7XG4gICAgICAgICAgaWYoIHR5cGVzW2pdID09ICdjb3VudHJ5Jykge1xuICAgICAgICAgICAgcmV0dXJuIGNvbXBvbmVudHNbaV0uc2hvcnRfbmFtZTsgXG4gICAgICAgICAgfSBcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiAgXG4gICAgICogQHBhcmFtIHNoaXBwaW5nRGF0YSwgdGhlIGFkZHJlc3MgcGFydHMgICAgICAgXG4gICAgICogQHBhcmFtIGZfY2FsbGJhY2sgLCB0aGUgZnVuY3Rpb24gdG8gY2FsbCB3aGVuIGFsbCBtaWdodHkgZ29vZ2xlIHJldHVybnMgYSByZXN1bHQgXG4gICAgICovIFxuICAgIGdlb2NvZGUoc2hpcHBpbmdEYXRhLCAgZl9jYWxsYmFjaykgeyBcbiAgICAgIGlmKHR5cGVvZihnb29nbGUpID09ICd1bmRlZmluZWQnKXsgLy9zY3JpcHQgbm90IGxvYWRlZCB5ZXRcbiAgICAgICAgc2V0VGltZW91dCgoKT0+e3RoaXMuZ2VvY29kZShzaGlwcGluZ0RhdGEsIGZfY2FsbGJhY2spOyB9LCAyMDApOyBcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICAgIGxldCBnZW9jb2RlciA9IG5ldyBnb29nbGUubWFwcy5HZW9jb2RlcigpO1xuICAgICAgICBsZXQgbWUgID0gdGhpczsgXG5cbiAgICAgICAgdmFyIGFkZHJlc3MgPSBzaGlwcGluZ0RhdGEuQWRkcmVzcy5TdHJlZXRuYW1lMSArIFwiIFwiICsgc2hpcHBpbmdEYXRhLkFkZHJlc3MuU3RyZWV0bmFtZTIgKyBcIiBcIiArIHNoaXBwaW5nRGF0YS5BZGRyZXNzLnBvc3RhbENvZGUgKyBcIiBcIiArIHNoaXBwaW5nRGF0YS5BZGRyZXNzLkNpdHkgKyBcIiBcIiArIHNoaXBwaW5nRGF0YS5BZGRyZXNzLlN0YXRlICsgXCIgXCIgKyBzaGlwcGluZ0RhdGEuQWRkcmVzcy5Db3VudHJ5O1xuICAgICAgICBjb25zb2xlLmxvZygnZ2VvY29kaW5nICcgKyBhZGRyZXNzKTtcblxuICAgICAgICBnZW9jb2Rlci5nZW9jb2RlKHsgJ2FkZHJlc3MnOiBhZGRyZXNzIH0sIGZ1bmN0aW9uKHJlc3VsdHMsIHN0YXR1cykge1xuICAgICAgICAgICAgbGV0IGdlb2NvZGUgPSB7aXNvMjonJywgbGF0OicnLCBsbmc6Jyd9O1xuXG4gICAgICAgICAgICBpZiAoc3RhdHVzID09ICdPSycpIHtcbiAgICAgICAgICAgICAgICBnZW9jb2RlID0gcmVzdWx0c1swXTtcbiAgICAgICAgICAgIH0gIFxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0dlb2NvZGUgd2FzIG5vdCBzdWNjZXNzZnVsIGZvciB0aGUgZm9sbG93aW5nIHJlYXNvbjogJyArIHN0YXR1cyk7XG4gICAgICAgICAgICAgICAgZl9jYWxsYmFjayhnZW9jb2RlKTtcbiAgICAgICAgICAgICAgICByZXR1cm47IFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBsZXQgbGF0bG5nID0gZ2VvY29kZS5nZW9tZXRyeS5sb2NhdGlvbjtcblxuICAgICAgICAgICAgZ2VvY29kZS5pc28yID0gbWUuZ2V0Q291bnRyeUNvZGVGcm9tUmVzdWx0KGdlb2NvZGUpO1xuICAgICAgICAgICAgZ2VvY29kZS5sYXQgPSBsYXRsbmcubGF0KCk7IFxuICAgICAgICAgICAgZ2VvY29kZS5sbmcgPSBsYXRsbmcubG5nKCk7IFxuXG4gICAgICAgICAgICBmX2NhbGxiYWNrKGdlb2NvZGUpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjbGVhck1hcmtlcnMoKSB7XG4gICAgICAgIGlmICh0aGlzLm1hcmtlcnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm1hcmtlcnMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1hcmtlcnNbaV0uc2V0TWFwKG51bGwpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLm1hcmtlcnMgPSBbXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKiBcbiAgICAgKiBBZGQgdGhlIG1hcmtlcnMgdG8gbWFwIFxuICAgICAqIEBwYXJhbSBhcnJheSBwaWNrdXBQb2ludHMgLSBhbiBhcnJheSBvZiBwaWNrdXBQb2ludHNcbiAgICAgKiBAcGFyYW0gY2FsbGJhY2sgLSBhIGZ1bmN0aW9uIHRvIGNhbGwgd2hlbiB0aGUgbWFya2VyIGlzIGNsaWNrZWQgXG4gICAgICovXG4gICAgYWRkTWFya2VycyhwaWNrdXBQb2ludHMsIGNhbGxiYWNrKSB7XG4gICAgICAgIHRoaXMucGlja3VwUG9pbnRzID0gcGlja3VwUG9pbnRzO1xuXG4gICAgICAgIGZvciAobGV0IHggPSAwOyB4IDwgcGlja3VwUG9pbnRzLmxlbmd0aDsgKyt4KSB7XG4gICAgICAgICAgICB0aGlzLm1hcmtlcnNbeF0gPSB0aGlzLmdldE1hcmtlcihwaWNrdXBQb2ludHNbeF0pO1xuICAgICAgICAgICAgLy8gICAgd2UgbmVlZCB0byBkbyB0aGlzIGJlY2F1c2UgdGhlIHZhbHVlcyBmb3IgbGF0LGxuZyB3ZSBoYXZlIGFyZSByb3VuZGVkLCBzbyB0aGV5IHdpbGwgbm90IG1hdGNoIHRoZSBvbmVzIHJldHVybmVkIGJ5IGdvb2dsZVxuICAgICAgICAgICAgcGlja3VwUG9pbnRzW3hdLm1hcmtlciA9IHRoaXMubWFya2Vyc1t4XTtcblxuICAgICAgICAgICAgdGhpcy5tYXJrZXJzW3hdLmFkZExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgICAgaWYodHlwZW9mKGNhbGxiYWNrKSE9ICd1bmRlZmluZWQnKXtcbiAgICAgICAgICAgICAgICBjYWxsYmFjayh4KTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmZpdEJvdW5kcygpXG4gICAgfVxuXG4gICAgLyoqIFxuICAgICAqIFJldHVybiBhIG1hcmtlciBmb3IgdGhlIGdtYXBzIFxuICAgICAqL1xuICAgIGdldE1hcmtlcihwaWNrdXBQb2ludCwgY2FsbGJhY2spIHtcbiAgICAgICAgbGV0IG1hcmtlciA9IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuICAgICAgICAgICAgcG9zaXRpb246IG5ldyBnb29nbGUubWFwcy5MYXRMbmcocGlja3VwUG9pbnQuTGF0LCBwaWNrdXBQb2ludC5Mb25nKSxcbiAgICAgICAgICAgIG1hcDogdGhpcy5tYXAsXG4gICAgICAgICAgICBpY29uOiB7XG4gICAgICAgICAgICAgICAgdXJsOiAgdGhpcy5jdXJyZW50X2ljb24sXG4gICAgICAgICAgICAgICAgc2NhbGVkU2l6ZTogbmV3IGdvb2dsZS5tYXBzLlNpemUoNTAsIDUwKSwgLy8gc2NhbGVkIHNpemVcbiAgICAgICAgICAgICAgICBvcmlnaW46IG5ldyBnb29nbGUubWFwcy5Qb2ludCgwLDApLCAvLyBvcmlnaW5cbiAgICAgICAgICAgICAgICBhbmNob3I6IG5ldyBnb29nbGUubWFwcy5Qb2ludCgwLCAwKSAvLyBhbmNob3JcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gXG5cbiAgICAgICAgcmV0dXJuIG1hcmtlcjtcbiAgICAgfVxuXG4gICAgZml0Qm91bmRzKCkge1xuICAgICAgdmFyIGJvdW5kcyA9IG5ldyBnb29nbGUubWFwcy5MYXRMbmdCb3VuZHMoKTtcbiAgICAgIGZvciggbGV0IHggPSAwOyB4PCB0aGlzLm1hcmtlcnMubGVuZ3RoOyArK3ggKXtcbiAgICAgICAgYm91bmRzLmV4dGVuZCh0aGlzLm1hcmtlcnNbeF0uZ2V0UG9zaXRpb24oKSk7IFxuICAgICAgfSBcbiAgICAgIHRoaXMubWFwLmZpdEJvdW5kcyhib3VuZHMpO1xuICAgIH1cbiBcbiAgICAvKipcbiAgICAgKiBSZXNldCBhbGwgbWFya2VycyAgXG4gICAgICogU2VsZWN0IHRoZSBtYXJrZXIgb2YgaW5kZXggaWR4IGluIG1hcCBcbiAgICAgKiBAcGFyYW0gaW50IGlkeCAtIHRoZSBpbmRleCB0byBzZWxlY3QgXG4gICAgICovXG4gICAgc2VsZWN0TWFya2VyQnlJZHgoaWR4KSB7IFxuICAgICAgICBsZXQgc2VsZWN0ZWQgPSB7XG4gICAgICAgICAgICAgICAgdXJsOiAgdGhpcy5pY29uX3NlbGVjdGVkLFxuICAgICAgICAgICAgICAgIHNjYWxlZFNpemU6IG5ldyBnb29nbGUubWFwcy5TaXplKDUwLCA1MCksIC8vIHNjYWxlZCBzaXplXG4gICAgICAgICAgICAgICAgb3JpZ2luOiBuZXcgZ29vZ2xlLm1hcHMuUG9pbnQoMCwwKSwgLy8gb3JpZ2luXG4gICAgICAgICAgICAgICAgYW5jaG9yOiBuZXcgZ29vZ2xlLm1hcHMuUG9pbnQoMCwgMCkgLy8gYW5jaG9yXG4gICAgICAgIH07XG4gICAgICAgIGxldCBjdXJyID0ge1xuICAgICAgICAgICAgICAgIHVybDogIHRoaXMuY3VycmVudF9pY29uLFxuICAgICAgICAgICAgICAgIHNjYWxlZFNpemU6IG5ldyBnb29nbGUubWFwcy5TaXplKDUwLCA1MCksIC8vIHNjYWxlZCBzaXplXG4gICAgICAgICAgICAgICAgb3JpZ2luOiBuZXcgZ29vZ2xlLm1hcHMuUG9pbnQoMCwwKSwgLy8gb3JpZ2luXG4gICAgICAgICAgICAgICAgYW5jaG9yOiBuZXcgZ29vZ2xlLm1hcHMuUG9pbnQoMCwgMCkgLy8gYW5jaG9yXG4gICAgICAgIH07XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm1hcmtlcnMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIHRoaXMubWFya2Vyc1tpXS5zZXRJY29uKFxuICAgICAgICAgICAgICBpZHggPT0gaSBcbiAgICAgICAgICAgICAgPyBcbiAgICAgICAgICAgICAgc2VsZWN0ZWRcbiAgICAgICAgICAgICAgOlxuICAgICAgICAgICAgICBjdXJyXG4gICAgICAgICAgICApOyAgXG4gICAgICAgIH1cbiAgICB9XG5cbn0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./js/shiptimize-gmaps.js\n");

/***/ }),

/***/ "./js/shiptimize-open-map.js":
/*!***********************************!*\
  !*** ./js/shiptimize-open-map.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shiptimizeUtils = __webpack_require__(/*! ./shiptimize-utils.js */ \"./js/shiptimize-utils.js\");\n\nvar _shiptimizeUtils2 = _interopRequireDefault(_shiptimizeUtils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ShiptimizeOpenMap = function () {\n    function ShiptimizeOpenMap() {\n        _classCallCheck(this, ShiptimizeOpenMap);\n\n        this.isScriptLoaded = false;\n        this.markers = [];\n        this.map = null;\n\n        /** \n         * the root url for the icons it's different for every platform  \n         * make sure to include a trailing / \n         */\n        this.icon_folder = typeof shiptimize_icon_folder != 'undefined' ? shiptimize_icon_folder : '';\n    }\n\n    /** \n     *\n     * @param string imageUrl - full url to the icon \n     * @return L.icon object \n     */\n\n\n    _createClass(ShiptimizeOpenMap, [{\n        key: 'createIcon',\n        value: function createIcon(imageUrl) {\n            return L.icon({\n                iconUrl: imageUrl,\n                iconSize: [50, 50], // size of the icon \n                iconAnchor: [25, 25], // point of the icon which will correspond to marker's location \n                popupAnchor: [-25, -50] // point from which the popup should open relative to the iconAnchor\n            });\n        }\n\n        /** \n         * @param decimal lat \n         * @param decimal lng \n         */\n\n    }, {\n        key: 'centerMap',\n        value: function centerMap(lat, lng) {\n            var latlng = L.latLng(lat, lng);\n        }\n\n        /** \n         * if the script has not been loaded , load it. \n         * We use this function because we only want to load the script when the user clicks the button \n         */\n\n    }, {\n        key: 'grantReady',\n        value: function grantReady() {\n            if (!this.isScriptLoaded) {\n                this.loadScript();\n            }\n        }\n\n        /** \n         * @param f_callback what function to call when the request resolves \n         * @param city - city name \n         * @param country - country in iso2 uppercase \n         * @param postalcode - the postal code \n         * @param streetname - the streetname \n         */\n\n    }, {\n        key: 'geocodeAddress',\n        value: function geocodeAddress(f_callback, city, country, postalcode, streetname) {\n            var queryString = \"https://nominatim.openstreetmap.org/search?format=json&addressdetails=1\" + \"&city=\" + city + \"&country=\" + country;\n\n            if (typeof postalcode != 'undefined') {\n                if (country == 'PT' || country == 'Portugal') {\n                    postalcode = postalcode.substr(0, 4);\n                }\n                queryString += \"&postalcode=\" + postalcode;\n            }\n\n            if (typeof streetname != 'undefined') {\n                queryString += \"&street=\" + streetname;\n            }\n\n            jQuery.getJSON(queryString, {}, function (response) {\n                var geocode = {\n                    'iso2': '',\n                    'lat': '',\n                    'lng': ''\n                };\n\n                if (response.length > 0) {\n                    var location = response[0];\n\n                    geocode.iso2 = location.address.country_code;\n\n                    geocode.lat = location.lat;\n                    geocode.lng = location.lon;\n                }\n                f_callback(geocode);\n\n                console.log(response);\n            });\n        }\n    }, {\n        key: 'geocode',\n\n\n        /**\n         *  \n         * @param shippingData, the address parts       \n         * @param f_callback , the function to call when all mighty google returns a result \n         */\n        value: function geocode(shippingData, f_callback) {\n            var _this = this;\n\n            console.log(shippingData);\n            this.grantReady();\n\n            this.geocodeAddress(function (geocode) {\n                if (!geocode.lat) {\n                    return _this.geocodeAddress(function (geocode) {\n                        f_callback(geocode);\n                    }, shippingData.Address.City, shippingData.Address.Country);\n                }\n\n                f_callback(geocode);\n            }, shippingData.Address.City, shippingData.Address.Country, shippingData.Address.PostalCode, shippingData.Address.Streetname1);\n        }\n    }, {\n        key: 'loadScript',\n        value: function loadScript() {\n            _shiptimizeUtils2.default.injectExternalScript(SHIPTIMIZE_PLUGIN_URL + \"assets/js/leaflet-1.4.0.js\");\n            this.isScriptLoaded = true;\n            this.loadMap();\n            return;\n        }\n\n        /** \n         * Leaflet does not receive a callback so we wait here for the script to be loaded \n         */\n\n    }, {\n        key: 'loadMap',\n        value: function loadMap() {\n            var _this2 = this;\n\n            if (typeof L == 'undefined') {\n                setTimeout(function () {\n                    _this2.loadMap();\n                }, 200);\n                return;\n            }\n\n            this.icon_selected = this.createIcon(shiptimize_icon_folder + 'selected.png');\n            this.icon_default = this.createIcon(shiptimize_icon_folder + 'default.png');\n            this.current_icon = this.icon_default;\n\n            this.map = new L.map(jQuery(\".shiptimize-pickup__map\").get(0), {\n                \"zoom\": 16,\n                \"center\": [51.505, -0.09]\n            });\n\n            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n                \"attribution\": '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            }).addTo(this.map);\n        }\n    }, {\n        key: 'clearMarkers',\n        value: function clearMarkers() {\n            if (this.markers.length > 0) {\n                for (var i = 0; i < this.markers.length; ++i) {\n                    this.map.removeLayer(this.markers[i]);\n                }\n            }\n            this.markers = [];\n        }\n\n        /** \n         * Add the markers to map \n         * @param array pickupPoints - an array of pickupPoints\n         * @param function callback \n         */\n\n    }, {\n        key: 'addMarkers',\n        value: function addMarkers(pickupPoints, callback) {\n            var _this3 = this;\n\n            this.pickupPoints = pickupPoints;\n\n            var _loop = function _loop(x) {\n                _this3.markers[x] = _this3.getMarker(pickupPoints[x]);\n                //    we need to do this because the values for lat,lng we have are rounded, so they will not match the ones returned by google\n                _this3.pickupPoints[x].marker = _this3.markers[x];\n\n                _this3.markers[x].on('click', function () {\n                    if (typeof callback == 'function') {\n                        callback(x);\n                    }\n                });\n            };\n\n            for (var x = 0; x < pickupPoints.length; ++x) {\n                _loop(x);\n            }\n\n            this.fitBounds();\n        }\n    }, {\n        key: 'resetMarker',\n        value: function resetMarker(marker) {\n            marker.setIcon(this.icon_default);\n        }\n    }, {\n        key: 'selectMarker',\n        value: function selectMarker(marker) {\n            marker.setIcon(this.icon_selected);\n        }\n\n        /** \n         * Adjust the zoom in the map to display all the markers \n         * There's a fit bounds that receives 2 corners, but calculating them is up to us. \n         * corners: top left, bottom right     \n         * then we center the map at the center of the square  \n         */\n\n    }, {\n        key: 'fitBounds',\n        value: function fitBounds() {\n            var _this4 = this;\n\n            var bottomLeft = [this.pickupPoints[0].Lat, this.pickupPoints[0].Long];\n            var topRight = [this.pickupPoints[0].Lat, this.pickupPoints[0].Long];\n\n            for (var i = 0; i < this.pickupPoints.length; ++i) {\n                var lat = this.pickupPoints[i].Lat;\n                var lng = this.pickupPoints[i].Long;\n\n                if (lat < bottomLeft[0]) {\n                    bottomLeft[0] = lat;\n                }\n\n                if (lat > topRight[0]) {\n                    topRight[0] = lat;\n                }\n\n                if (lng > topRight[1]) {\n                    topRight[1] = lng;\n                }\n\n                if (lng < bottomLeft[1]) {\n                    bottomLeft[1] = lng;\n                }\n            }\n\n            var centerX = parseFloat(bottomLeft[0]) + (parseFloat(topRight[0]) - parseFloat(bottomLeft[0])) / 2;\n            var centerY = parseFloat(bottomLeft[1]) + (parseFloat(topRight[1]) - parseFloat(bottomLeft[1])) / 2;\n\n            this.map.panTo([centerX, centerY]);\n\n            this.map.fitBounds([bottomLeft, topRight]);\n\n            setTimeout(function () {\n                _this4.map.invalidateSize();\n            }, 200);\n        }\n\n        /** \n         * Return a marker for the openLayers \n         * IconAnchor: The coordinates of the \"tip\" of the icon (relative to its top left corner). \n         * The icon will be aligned so that this point is at the marker's geographical location. \n         * Centered by default if size is specified, also can be set in CSS with negative margins.\n         */\n\n    }, {\n        key: 'getMarker',\n        value: function getMarker(pickupPoint) {\n            var marker = L.marker([pickupPoint.Lat, pickupPoint.Long], {\n                \"icon\": this.current_icon,\n                \"title\": pickupPoint.Information.Name + \"\\n\" + pickupPoint.Information.Address\n            });\n            marker.addTo(this.map);\n            return marker;\n        }\n\n        /** \n         * Checks if we have an icon for this carrier.\n         * If yes then change the carrier icon\n         * If not then use the default icon\n         * \n         * @param int carrier_id - the carrier id \n         */\n\n    }, {\n        key: 'setCarrierIcon',\n        value: function setCarrierIcon(carrier_id) {\n            var _this5 = this;\n\n            if (typeof L == 'undefined') {\n                setTimeout(function () {\n                    _this5.setCarrierIcon(carrier_id);\n                }, 200);\n                return;\n            }\n            var carrier_icon_url = this.icon_folder + '' + carrier_id + '.png';\n            //this.current_icon = Utils.isUrlValid(carrier_icon_url) ? this.createIcon(carrier_icon_url) : this.icon_default;\n            this.current_icon = this.createIcon(carrier_icon_url);\n        }\n\n        /**\n         * Reset all markers  \n         * Select the marker of index idx in map \n         * @param int idx - the index to select \n         */\n\n    }, {\n        key: 'selectMarkerByIdx',\n        value: function selectMarkerByIdx(idx) {\n            for (var i = 0; i < this.markers.length; ++i) {\n                this.markers[i].setIcon(idx == i ? this.icon_selected : this.current_icon);\n            }\n        }\n    }]);\n\n    return ShiptimizeOpenMap;\n}();\n\nexports.default = ShiptimizeOpenMap;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9zaGlwdGltaXplLW9wZW4tbWFwLmpzPzg5YzEiXSwibmFtZXMiOlsiU2hpcHRpbWl6ZU9wZW5NYXAiLCJpc1NjcmlwdExvYWRlZCIsIm1hcmtlcnMiLCJtYXAiLCJpY29uX2ZvbGRlciIsInNoaXB0aW1pemVfaWNvbl9mb2xkZXIiLCJpbWFnZVVybCIsIkwiLCJpY29uIiwiaWNvblVybCIsImljb25TaXplIiwiaWNvbkFuY2hvciIsInBvcHVwQW5jaG9yIiwibGF0IiwibG5nIiwibGF0bG5nIiwibGF0TG5nIiwibG9hZFNjcmlwdCIsImZfY2FsbGJhY2siLCJjaXR5IiwiY291bnRyeSIsInBvc3RhbGNvZGUiLCJzdHJlZXRuYW1lIiwicXVlcnlTdHJpbmciLCJzdWJzdHIiLCJqUXVlcnkiLCJnZXRKU09OIiwicmVzcG9uc2UiLCJnZW9jb2RlIiwibGVuZ3RoIiwibG9jYXRpb24iLCJpc28yIiwiYWRkcmVzcyIsImNvdW50cnlfY29kZSIsImxvbiIsImNvbnNvbGUiLCJsb2ciLCJzaGlwcGluZ0RhdGEiLCJncmFudFJlYWR5IiwiZ2VvY29kZUFkZHJlc3MiLCJBZGRyZXNzIiwiQ2l0eSIsIkNvdW50cnkiLCJQb3N0YWxDb2RlIiwiU3RyZWV0bmFtZTEiLCJVdGlscyIsImluamVjdEV4dGVybmFsU2NyaXB0IiwiU0hJUFRJTUlaRV9QTFVHSU5fVVJMIiwibG9hZE1hcCIsInNldFRpbWVvdXQiLCJpY29uX3NlbGVjdGVkIiwiY3JlYXRlSWNvbiIsImljb25fZGVmYXVsdCIsImN1cnJlbnRfaWNvbiIsImdldCIsInRpbGVMYXllciIsImFkZFRvIiwiaSIsInJlbW92ZUxheWVyIiwicGlja3VwUG9pbnRzIiwiY2FsbGJhY2siLCJ4IiwiZ2V0TWFya2VyIiwibWFya2VyIiwib24iLCJmaXRCb3VuZHMiLCJzZXRJY29uIiwiYm90dG9tTGVmdCIsIkxhdCIsIkxvbmciLCJ0b3BSaWdodCIsImNlbnRlclgiLCJwYXJzZUZsb2F0IiwiY2VudGVyWSIsInBhblRvIiwiaW52YWxpZGF0ZVNpemUiLCJwaWNrdXBQb2ludCIsIkluZm9ybWF0aW9uIiwiTmFtZSIsImNhcnJpZXJfaWQiLCJzZXRDYXJyaWVySWNvbiIsImNhcnJpZXJfaWNvbl91cmwiLCJpZHgiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7O0lBRXFCQSxpQjtBQUVqQixpQ0FBYztBQUFBOztBQUNWLGFBQUtDLGNBQUwsR0FBc0IsS0FBdEI7QUFDQSxhQUFLQyxPQUFMLEdBQWUsRUFBZjtBQUNBLGFBQUtDLEdBQUwsR0FBVyxJQUFYOztBQUVBOzs7O0FBSUEsYUFBS0MsV0FBTCxHQUFtQixPQUFPQyxzQkFBUCxJQUFrQyxXQUFsQyxHQUFnREEsc0JBQWhELEdBQXlFLEVBQTVGO0FBQ0g7O0FBRUQ7Ozs7Ozs7OzttQ0FLV0MsUSxFQUFVO0FBQ2xCLG1CQUFPQyxFQUFFQyxJQUFGLENBQU87QUFDVEMseUJBQVNILFFBREE7QUFFVEksMEJBQVUsQ0FBQyxFQUFELEVBQUssRUFBTCxDQUZELEVBRVc7QUFDcEJDLDRCQUFZLENBQUMsRUFBRCxFQUFLLEVBQUwsQ0FISCxFQUdhO0FBQ3RCQyw2QkFBYSxDQUFDLENBQUMsRUFBRixFQUFNLENBQUMsRUFBUCxDQUpKLENBSWU7QUFKZixhQUFQLENBQVA7QUFNRjs7QUFFRDs7Ozs7OztrQ0FJVUMsRyxFQUFLQyxHLEVBQUk7QUFDZixnQkFBSUMsU0FBU1IsRUFBRVMsTUFBRixDQUFTSCxHQUFULEVBQWNDLEdBQWQsQ0FBYjtBQUNIOztBQUVEOzs7Ozs7O3FDQUlhO0FBQ1QsZ0JBQUksQ0FBQyxLQUFLYixjQUFWLEVBQTBCO0FBQ3RCLHFCQUFLZ0IsVUFBTDtBQUNIO0FBQ0o7O0FBR0g7Ozs7Ozs7Ozs7dUNBT2VDLFUsRUFBWUMsSSxFQUFNQyxPLEVBQVNDLFUsRUFBWUMsVSxFQUFZO0FBQ2hFLGdCQUFJQyxjQUFjLDRFQUNoQixRQURnQixHQUNMSixJQURLLEdBRWhCLFdBRmdCLEdBRUZDLE9BRmhCOztBQUlBLGdCQUFJLE9BQVFD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LGlCQUFLLElBQUl6QixJQUFJLENBQWIsRUFBZ0JBLElBQUksS0FBS3ZELE9BQUwsQ0FBYTJCLE1BQWpDLEVBQXlDLEVBQUU0QixDQUEzQyxFQUE4QztBQUMxQyxxQkFBS3ZELE9BQUwsQ0FBYXVELENBQWIsRUFBZ0JTLE9BQWhCLENBQ0lnQixPQUFPekIsQ0FBUCxHQUNBLEtBQUtQLGFBREwsR0FFQSxLQUFLRyxZQUhUO0FBS0g7QUFDSjs7Ozs7O2tCQS9RZ0JyRCxpQiIsImZpbGUiOiIuL2pzL3NoaXB0aW1pemUtb3Blbi1tYXAuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVXRpbHMgZnJvbSAnLi9zaGlwdGltaXplLXV0aWxzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hpcHRpbWl6ZU9wZW5NYXAge1xuXG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuaXNTY3JpcHRMb2FkZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5tYXJrZXJzID0gW107XG4gICAgICAgIHRoaXMubWFwID0gbnVsbDtcblxuICAgICAgICAvKiogXG4gICAgICAgICAqIHRoZSByb290IHVybCBmb3IgdGhlIGljb25zIGl0J3MgZGlmZmVyZW50IGZvciBldmVyeSBwbGF0Zm9ybSAgXG4gICAgICAgICAqIG1ha2Ugc3VyZSB0byBpbmNsdWRlIGEgdHJhaWxpbmcgLyBcbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuaWNvbl9mb2xkZXIgPSB0eXBlb2Yoc2hpcHRpbWl6ZV9pY29uX2ZvbGRlcikgIT0gJ3VuZGVmaW5lZCcgPyBzaGlwdGltaXplX2ljb25fZm9sZGVyIDogJyc7XG4gICAgfVxuXG4gICAgLyoqIFxuICAgICAqXG4gICAgICogQHBhcmFtIHN0cmluZyBpbWFnZVVybCAtIGZ1bGwgdXJsIHRvIHRoZSBpY29uIFxuICAgICAqIEByZXR1cm4gTC5pY29uIG9iamVjdCBcbiAgICAgKi9cbiAgICBjcmVhdGVJY29uKGltYWdlVXJsKSB7XG4gICAgICAgcmV0dXJuIEwuaWNvbih7XG4gICAgICAgICAgICBpY29uVXJsOiBpbWFnZVVybCxcbiAgICAgICAgICAgIGljb25TaXplOiBbNTAsIDUwXSwgLy8gc2l6ZSBvZiB0aGUgaWNvbiBcbiAgICAgICAgICAgIGljb25BbmNob3I6IFsyNSwgMjVdLCAvLyBwb2ludCBvZiB0aGUgaWNvbiB3aGljaCB3aWxsIGNvcnJlc3BvbmQgdG8gbWFya2VyJ3MgbG9jYXRpb24gXG4gICAgICAgICAgICBwb3B1cEFuY2hvcjogWy0yNSwgLTUwXSAvLyBwb2ludCBmcm9tIHdoaWNoIHRoZSBwb3B1cCBzaG91bGQgb3BlbiByZWxhdGl2ZSB0byB0aGUgaWNvbkFuY2hvclxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKiogXG4gICAgICogQHBhcmFtIGRlY2ltYWwgbGF0IFxuICAgICAqIEBwYXJhbSBkZWNpbWFsIGxuZyBcbiAgICAgKi8gXG4gICAgY2VudGVyTWFwKGxhdCwgbG5nKXtcbiAgICAgICAgbGV0IGxhdGxuZyA9IEwubGF0TG5nKGxhdCwgbG5nKTsgIFxuICAgIH1cblxuICAgIC8qKiBcbiAgICAgKiBpZiB0aGUgc2NyaXB0IGhhcyBub3QgYmVlbiBsb2FkZWQgLCBsb2FkIGl0LiBcbiAgICAgKiBXZSB1c2UgdGhpcyBmdW5jdGlvbiBiZWNhdXNlIHdlIG9ubHkgd2FudCB0byBsb2FkIHRoZSBzY3JpcHQgd2hlbiB0aGUgdXNlciBjbGlja3MgdGhlIGJ1dHRvbiBcbiAgICAgKi9cbiAgICBncmFudFJlYWR5KCkge1xuICAgICAgICBpZiAoIXRoaXMuaXNTY3JpcHRMb2FkZWQpIHtcbiAgICAgICAgICAgIHRoaXMubG9hZFNjcmlwdCgpO1xuICAgICAgICB9XG4gICAgfVxuXG5cbiAgLyoqIFxuICAgKiBAcGFyYW0gZl9jYWxsYmFjayB3aGF0IGZ1bmN0aW9uIHRvIGNhbGwgd2hlbiB0aGUgcmVxdWVzdCByZXNvbHZlcyBcbiAgICogQHBhcmFtIGNpdHkgLSBjaXR5IG5hbWUgXG4gICAqIEBwYXJhbSBjb3VudHJ5IC0gY291bnRyeSBpbiBpc28yIHVwcGVyY2FzZSBcbiAgICogQHBhcmFtIHBvc3RhbGNvZGUgLSB0aGUgcG9zdGFsIGNvZGUgXG4gICAqIEBwYXJhbSBzdHJlZXRuYW1lIC0gdGhlIHN0cmVldG5hbWUgXG4gICAqL1xuICBnZW9jb2RlQWRkcmVzcyhmX2NhbGxiYWNrLCBjaXR5LCBjb3VudHJ5LCBwb3N0YWxjb2RlLCBzdHJlZXRuYW1lKSB7XG4gICAgdmFyIHF1ZXJ5U3RyaW5nID0gXCJodHRwczovL25vbWluYXRpbS5vcGVuc3RyZWV0bWFwLm9yZy9zZWFyY2g/Zm9ybWF0PWpzb24mYWRkcmVzc2RldGFpbHM9MVwiICtcbiAgICAgIFwiJmNpdHk9XCIgKyBjaXR5ICtcbiAgICAgIFwiJmNvdW50cnk9XCIgKyBjb3VudHJ5O1xuXG4gICAgaWYgKHR5cGVvZiAocG9zdGFsY29kZSkgIT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGlmIChjb3VudHJ5ID09ICdQVCcgfHwgY291bnRyeSA9PSAnUG9ydHVnYWwnKSB7XG4gICAgICAgIHBvc3RhbGNvZGUgPSBwb3N0YWxjb2RlLnN1YnN0cigwLCA0KTtcbiAgICAgIH1cbiAgICAgIHF1ZXJ5U3RyaW5nICs9IFwiJnBvc3RhbGNvZGU9XCIgKyBwb3N0YWxjb2RlO1xuICAgIH1cblxuICAgIGlmICh0eXBlb2YgKHN0cmVldG5hbWUpICE9ICd1bmRlZmluZWQnKSB7XG4gICAgICBxdWVyeVN0cmluZyArPSBcIiZzdHJlZXQ9XCIgKyBzdHJlZXRuYW1lO1xuICAgIH1cblxuICAgIGpRdWVyeS5nZXRKU09OKHF1ZXJ5U3RyaW5nLCB7fSwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICBsZXQgZ2VvY29kZSA9IHtcbiAgICAgICAgJ2lzbzInOiAnJyxcbiAgICAgICAgJ2xhdCc6ICcnLFxuICAgICAgICAnbG5nJzogJydcbiAgICAgIH07XG5cbiAgICAgIGlmIChyZXNwb25zZS5sZW5ndGggPiAwKSB7XG4gICAgICAgIGxldCBsb2NhdGlvbiA9IHJlc3BvbnNlWzBdO1xuXG4gICAgICAgIGdlb2NvZGUuaXNvMiA9IGxvY2F0aW9uLmFkZHJlc3MuY291bnRyeV9jb2RlO1xuXG4gICAgICAgIGdlb2NvZGUubGF0ID0gbG9jYXRpb24ubGF0O1xuICAgICAgICBnZW9jb2RlLmxuZyA9IGxvY2F0aW9uLmxvbjtcbiAgICAgIH1cbiAgICAgIGZfY2FsbGJhY2soZ2VvY29kZSk7XG5cbiAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICB9KTtcbiAgfTtcblxuICAvKipcbiAgICogIFxuICAgKiBAcGFyYW0gc2hpcHBpbmdEYXRhLCB0aGUgYWRkcmVzcyBwYXJ0cyAgICAgICBcbiAgICogQHBhcmFtIGZfY2FsbGJhY2sgLCB0aGUgZnVuY3Rpb24gdG8gY2FsbCB3aGVuIGFsbCBtaWdodHkgZ29vZ2xlIHJldHVybnMgYSByZXN1bHQgXG4gICAqL1xuICBnZW9jb2RlKHNoaXBwaW5nRGF0YSwgZl9jYWxsYmFjaykge1xuICAgIGNvbnNvbGUubG9nKHNoaXBwaW5nRGF0YSk7XG4gICAgdGhpcy5ncmFudFJlYWR5KCk7XG5cbiAgICB0aGlzLmdlb2NvZGVBZGRyZXNzKChnZW9jb2RlKSA9PiB7XG4gICAgICBpZiAoIWdlb2NvZGUubGF0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdlb2NvZGVBZGRyZXNzKGZ1bmN0aW9uIChnZW9jb2RlKSB7XG4gICAgICAgICAgZl9jYWxsYmFjayhnZW9jb2RlKTtcbiAgICAgICAgfSwgc2hpcHBpbmdEYXRhLkFkZHJlc3MuQ2l0eSwgc2hpcHBpbmdEYXRhLkFkZHJlc3MuQ291bnRyeSk7XG4gICAgICB9XG5cbiAgICAgIGZfY2FsbGJhY2soZ2VvY29kZSk7XG4gICAgfSwgc2hpcHBpbmdEYXRhLkFkZHJlc3MuQ2l0eSwgc2hpcHBpbmdEYXRhLkFkZHJlc3MuQ291bnRyeSwgc2hpcHBpbmdEYXRhLkFkZHJlc3MuUG9zdGFsQ29kZSwgc2hpcHBpbmdEYXRhLkFkZHJlc3MuU3RyZWV0bmFtZTEpO1xuICB9XG4gICAgbG9hZFNjcmlwdCgpIHtcbiAgICAgICAgVXRpbHMuaW5qZWN0RXh0ZXJuYWxTY3JpcHQoU0hJUFRJTUlaRV9QTFVHSU5fVVJMICsgXCJhc3NldHMvanMvbGVhZmxldC0xLjQuMC5qc1wiKTtcbiAgICAgICAgdGhpcy5pc1NjcmlwdExvYWRlZCA9IHRydWU7XG4gICAgICAgIHRoaXMubG9hZE1hcCgpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgLyoqIFxuICAgICAqIExlYWZsZXQgZG9lcyBub3QgcmVjZWl2ZSBhIGNhbGxiYWNrIHNvIHdlIHdhaXQgaGVyZSBmb3IgdGhlIHNjcmlwdCB0byBiZSBsb2FkZWQgXG4gICAgICovXG4gICAgbG9hZE1hcCgpIHtcbiAgICAgICAgaWYgKHR5cGVvZihMKSA9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7IHRoaXMubG9hZE1hcCgpOyB9LCAyMDApO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5pY29uX3NlbGVjdGVkID0gdGhpcy5jcmVhdGVJY29uKHNoaXB0aW1pemVfaWNvbl9mb2xkZXIgKyAnc2VsZWN0ZWQucG5nJyk7XG4gICAgICAgIHRoaXMuaWNvbl9kZWZhdWx0ID0gdGhpcy5jcmVhdGVJY29uKHNoaXB0aW1pemVfaWNvbl9mb2xkZXIgKyAnZGVmYXVsdC5wbmcnKTtcbiAgICAgICAgdGhpcy5jdXJyZW50X2ljb24gPSB0aGlzLmljb25fZGVmYXVsdDtcblxuICAgICAgICB0aGlzLm1hcCA9IG5ldyBMLm1hcChqUXVlcnkoXCIuc2hpcHRpbWl6ZS1waWNrdXBfX21hcFwiKS5nZXQoMCksIHtcbiAgICAgICAgICAgIFwiem9vbVwiOiAxNixcbiAgICAgICAgICAgIFwiY2VudGVyXCI6IFs1MS41MDUsIC0wLjA5XVxuICAgICAgICB9KTtcblxuICAgICAgICBMLnRpbGVMYXllcignaHR0cHM6Ly97c30udGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmcnLCB7XG4gICAgICAgICAgICBcImF0dHJpYnV0aW9uXCI6ICcmY29weTsgPGEgaHJlZj1cImh0dHBzOi8vd3d3Lm9wZW5zdHJlZXRtYXAub3JnL2NvcHlyaWdodFwiPk9wZW5TdHJlZXRNYXA8L2E+IGNvbnRyaWJ1dG9ycydcbiAgICAgICAgfSkuYWRkVG8odGhpcy5tYXApO1xuICAgIH1cblxuICAgIGNsZWFyTWFya2VycygpIHtcbiAgICAgICAgaWYgKHRoaXMubWFya2Vycy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubWFya2Vycy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgICAgIHRoaXMubWFwLnJlbW92ZUxheWVyKHRoaXMubWFya2Vyc1tpXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5tYXJrZXJzID0gW107XG4gICAgfVxuXG5cbiAgICAvKiogXG4gICAgICogQWRkIHRoZSBtYXJrZXJzIHRvIG1hcCBcbiAgICAgKiBAcGFyYW0gYXJyYXkgcGlja3VwUG9pbnRzIC0gYW4gYXJyYXkgb2YgcGlja3VwUG9pbnRzXG4gICAgICogQHBhcmFtIGZ1bmN0aW9uIGNhbGxiYWNrIFxuICAgICAqL1xuICAgIGFkZE1hcmtlcnMocGlja3VwUG9pbnRzLCBjYWxsYmFjaykge1xuICAgICAgICB0aGlzLnBpY2t1cFBvaW50cyA9IHBpY2t1cFBvaW50czsgXG5cbiAgICAgICAgZm9yIChsZXQgeCA9IDA7IHggPCBwaWNrdXBQb2ludHMubGVuZ3RoOyArK3gpIHtcbiAgICAgICAgICAgIHRoaXMubWFya2Vyc1t4XSA9IHRoaXMuZ2V0TWFya2VyKHBpY2t1cFBvaW50c1t4XSk7XG4gICAgICAgICAgICAvLyAgICB3ZSBuZWVkIHRvIGRvIHRoaXMgYmVjYXVzZSB0aGUgdmFsdWVzIGZvciBsYXQsbG5nIHdlIGhhdmUgYXJlIHJvdW5kZWQsIHNvIHRoZXkgd2lsbCBub3QgbWF0Y2ggdGhlIG9uZXMgcmV0dXJuZWQgYnkgZ29vZ2xlXG4gICAgICAgICAgICB0aGlzLnBpY2t1cFBvaW50c1t4XS5tYXJrZXIgPSB0aGlzLm1hcmtlcnNbeF07XG5cbiAgICAgICAgICAgIHRoaXMubWFya2Vyc1t4XS5vbignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYodHlwZW9mKGNhbGxiYWNrKSA9PSAnZnVuY3Rpb24nKXtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soeCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmZpdEJvdW5kcygpO1xuICAgIH1cblxuICAgIHJlc2V0TWFya2VyKG1hcmtlcikge1xuICAgICAgICBtYXJrZXIuc2V0SWNvbih0aGlzLmljb25fZGVmYXVsdCk7XG4gICAgfVxuXG4gICAgc2VsZWN0TWFya2VyKG1hcmtlcikge1xuICAgICAgICBtYXJrZXIuc2V0SWNvbih0aGlzLmljb25fc2VsZWN0ZWQpO1xuICAgIH1cblxuICAgIC8qKiBcbiAgICAgKiBBZGp1c3QgdGhlIHpvb20gaW4gdGhlIG1hcCB0byBkaXNwbGF5IGFsbCB0aGUgbWFya2VycyBcbiAgICAgKiBUaGVyZSdzIGEgZml0IGJvdW5kcyB0aGF0IHJlY2VpdmVzIDIgY29ybmVycywgYnV0IGNhbGN1bGF0aW5nIHRoZW0gaXMgdXAgdG8gdXMuIFxuICAgICAqIGNvcm5lcnM6IHRvcCBsZWZ0LCBib3R0b20gcmlnaHQgICAgIFxuICAgICAqIHRoZW4gd2UgY2VudGVyIHRoZSBtYXAgYXQgdGhlIGNlbnRlciBvZiB0aGUgc3F1YXJlICBcbiAgICAgKi9cbiAgICBmaXRCb3VuZHMoKSB7XG4gICAgICAgIGxldCBib3R0b21MZWZ0ID0gW3RoaXMucGlja3VwUG9pbnRzWzBdLkxhdCwgdGhpcy5waWNrdXBQb2ludHNbMF0uTG9uZ107XG4gICAgICAgIGxldCB0b3BSaWdodCA9IFt0aGlzLnBpY2t1cFBvaW50c1swXS5MYXQsIHRoaXMucGlja3VwUG9pbnRzWzBdLkxvbmddO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5waWNrdXBQb2ludHMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGxldCBsYXQgPSB0aGlzLnBpY2t1cFBvaW50c1tpXS5MYXQ7XG4gICAgICAgICAgICBsZXQgbG5nID0gdGhpcy5waWNrdXBQb2ludHNbaV0uTG9uZztcblxuICAgICAgICAgICAgaWYgKGxhdCA8IGJvdHRvbUxlZnRbMF0pIHtcbiAgICAgICAgICAgICAgICBib3R0b21MZWZ0WzBdID0gbGF0O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAobGF0ID4gdG9wUmlnaHRbMF0pIHtcbiAgICAgICAgICAgICAgICB0b3BSaWdodFswXSA9IGxhdDtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGxuZyA+IHRvcFJpZ2h0WzFdKSB7XG4gICAgICAgICAgICAgICAgdG9wUmlnaHRbMV0gPSBsbmc7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChsbmcgPCBib3R0b21MZWZ0WzFdKSB7XG4gICAgICAgICAgICAgICAgYm90dG9tTGVmdFsxXSA9IGxuZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG5cbiAgICAgICAgbGV0IGNlbnRlclggPSBwYXJzZUZsb2F0KGJvdHRvbUxlZnRbMF0pICsgKHBhcnNlRmxvYXQodG9wUmlnaHRbMF0pIC0gcGFyc2VGbG9hdChib3R0b21MZWZ0WzBdKSkgLyAyO1xuICAgICAgICBsZXQgY2VudGVyWSA9IHBhcnNlRmxvYXQoYm90dG9tTGVmdFsxXSkgKyAocGFyc2VGbG9hdCh0b3BSaWdodFsxXSkgLSBwYXJzZUZsb2F0KGJvdHRvbUxlZnRbMV0pKSAvIDI7XG5cbiAgICAgICAgdGhpcy5tYXAucGFuVG8oW2NlbnRlclgsIGNlbnRlclldKTtcblxuICAgICAgICB0aGlzLm1hcC5maXRCb3VuZHMoW1xuICAgICAgICAgICAgYm90dG9tTGVmdCxcbiAgICAgICAgICAgIHRvcFJpZ2h0XG4gICAgICAgIF0pO1xuXG4gICAgICAgIHNldFRpbWVvdXQoICgpID0+IHsgdGhpcy5tYXAuaW52YWxpZGF0ZVNpemUoKX0sIDIwMCk7XG4gICAgfVxuXG4gICAgLyoqIFxuICAgICAqIFJldHVybiBhIG1hcmtlciBmb3IgdGhlIG9wZW5MYXllcnMgXG4gICAgICogSWNvbkFuY2hvcjogVGhlIGNvb3JkaW5hdGVzIG9mIHRoZSBcInRpcFwiIG9mIHRoZSBpY29uIChyZWxhdGl2ZSB0byBpdHMgdG9wIGxlZnQgY29ybmVyKS4gXG4gICAgICogVGhlIGljb24gd2lsbCBiZSBhbGlnbmVkIHNvIHRoYXQgdGhpcyBwb2ludCBpcyBhdCB0aGUgbWFya2VyJ3MgZ2VvZ3JhcGhpY2FsIGxvY2F0aW9uLiBcbiAgICAgKiBDZW50ZXJlZCBieSBkZWZhdWx0IGlmIHNpemUgaXMgc3BlY2lmaWVkLCBhbHNvIGNhbiBiZSBzZXQgaW4gQ1NTIHdpdGggbmVnYXRpdmUgbWFyZ2lucy5cbiAgICAgKi9cbiAgICBnZXRNYXJrZXIocGlja3VwUG9pbnQpIHtcbiAgICAgICAgbGV0IG1hcmtlciA9IEwubWFya2VyKFtwaWNrdXBQb2ludC5MYXQsIHBpY2t1cFBvaW50LkxvbmddLCB7XG4gICAgICAgICAgICBcImljb25cIjogdGhpcy5jdXJyZW50X2ljb24sXG4gICAgICAgICAgICBcInRpdGxlXCI6IHBpY2t1cFBvaW50LkluZm9ybWF0aW9uLk5hbWUgKyBcIlxcblwiICsgcGlja3VwUG9pbnQuSW5mb3JtYXRpb24uQWRkcmVzc1xuICAgICAgICB9KTtcbiAgICAgICAgbWFya2VyLmFkZFRvKHRoaXMubWFwKTtcbiAgICAgICAgcmV0dXJuIG1hcmtlcjtcbiAgICB9XG5cbiAgICAvKiogXG4gICAgICogQ2hlY2tzIGlmIHdlIGhhdmUgYW4gaWNvbiBmb3IgdGhpcyBjYXJyaWVyLlxuICAgICAqIElmIHllcyB0aGVuIGNoYW5nZSB0aGUgY2FycmllciBpY29uXG4gICAgICogSWYgbm90IHRoZW4gdXNlIHRoZSBkZWZhdWx0IGljb25cbiAgICAgKiBcbiAgICAgKiBAcGFyYW0gaW50IGNhcnJpZXJfaWQgLSB0aGUgY2FycmllciBpZCBcbiAgICAgKi9cbiAgICBzZXRDYXJyaWVySWNvbihjYXJyaWVyX2lkKSB7XG4gICAgICAgIGlmICh0eXBlb2YoTCkgPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4geyB0aGlzLnNldENhcnJpZXJJY29uKGNhcnJpZXJfaWQpOyB9LCAyMDApO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGxldCBjYXJyaWVyX2ljb25fdXJsID0gdGhpcy5pY29uX2ZvbGRlciArICcnICsgY2Fycmllcl9pZCArICcucG5nJztcbiAgICAgICAgLy90aGlzLmN1cnJlbnRfaWNvbiA9IFV0aWxzLmlzVXJsVmFsaWQoY2Fycmllcl9pY29uX3VybCkgPyB0aGlzLmNyZWF0ZUljb24oY2Fycmllcl9pY29uX3VybCkgOiB0aGlzLmljb25fZGVmYXVsdDtcbiAgICAgICAgdGhpcy5jdXJyZW50X2ljb24gPSB0aGlzLmNyZWF0ZUljb24oY2Fycmllcl9pY29uX3VybCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVzZXQgYWxsIG1hcmtlcnMgIFxuICAgICAqIFNlbGVjdCB0aGUgbWFya2VyIG9mIGluZGV4IGlkeCBpbiBtYXAgXG4gICAgICogQHBhcmFtIGludCBpZHggLSB0aGUgaW5kZXggdG8gc2VsZWN0IFxuICAgICAqL1xuICAgIHNlbGVjdE1hcmtlckJ5SWR4KGlkeCkge1xuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubWFya2Vycy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgdGhpcy5tYXJrZXJzW2ldLnNldEljb24oXG4gICAgICAgICAgICAgICAgaWR4ID09IGkgP1xuICAgICAgICAgICAgICAgIHRoaXMuaWNvbl9zZWxlY3RlZCA6XG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50X2ljb25cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./js/shiptimize-open-map.js\n");

/***/ }),

/***/ "./js/shiptimize-utils.js":
/*!********************************!*\
  !*** ./js/shiptimize-utils.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** \n * Singleton object we can use for platform independent stuff \n */\nvar ShiptimizeUtils = function () {\n  function ShiptimizeUtils() {\n    _classCallCheck(this, ShiptimizeUtils);\n  }\n\n  /** \n   * Inject Script into the page \n   * @param string src \n   */\n\n\n  _createClass(ShiptimizeUtils, [{\n    key: \"injectExternalScript\",\n    value: function injectExternalScript(src) {\n      var s = document.createElement(\"script\");\n      s.setAttribute(\"src\", src);\n      document.body.appendChild(s);\n    }\n\n    /** \n     * Inject a script string \n     */\n\n  }, {\n    key: \"injectScript\",\n    value: function injectScript(contents) {\n      var e = document.createElement(\"script\");\n      e.value = contents;\n      document.body.appendChild(e);\n    }\n\n    /** \n     * Removes all not numeric chars from the string \n     *\n     * @param string string - the input string \n     * @return the string without chars that are not numbers \n     */\n\n  }, {\n    key: \"removeNonNumeric\",\n    value: function removeNonNumeric(string) {\n      return string.replace(/\\D/g, '');\n    }\n\n    /** \n     * Check if the given url exists and is valid\n     * We use this to check if the carrier icon exists given \n     * a url path and the naming convention {carrier_id}.svg \n     * Make sure the correct protocol is appended to the url http != https \n     * \n     * @return true it the url exists and is valid \n     */\n\n  }, {\n    key: \"isUrlValid\",\n    value: function isUrlValid(url) {\n      var http = new XMLHttpRequest();\n      http.open('HEAD', url, false);\n      http.send();\n      return http.status == 200;\n    }\n\n    /** \n     * Open a new window with the provided URL \n     * @string url \n     * @return bool if the window was opened, false if popup blocker enabled \n     */\n\n  }, {\n    key: \"openNewWindow\",\n    value: function openNewWindow(url, options) {\n      var newWin = window.open(url, '_blank', options);\n      var blocked = !newWin || newWin.closed || typeof newWin.closed == 'undefined';\n\n      return !blocked;\n    }\n  }]);\n\n  return ShiptimizeUtils;\n}();\n\nvar utils = new ShiptimizeUtils();\nexports.default = utils;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9qcy9zaGlwdGltaXplLXV0aWxzLmpzPzAwZDQiXSwibmFtZXMiOlsiU2hpcHRpbWl6ZVV0aWxzIiwic3JjIiwicyIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImNvbnRlbnRzIiwiZSIsInZhbHVlIiwic3RyaW5nIiwicmVwbGFjZSIsInVybCIsImh0dHAiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJzZW5kIiwic3RhdHVzIiwib3B0aW9ucyIsIm5ld1dpbiIsIndpbmRvdyIsImJsb2NrZWQiLCJjbG9zZWQiLCJ1dGlscyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7SUFHTUEsZTtBQUVGLDZCQUFjO0FBQUE7QUFFYjs7QUFHRDs7Ozs7Ozs7eUNBSXFCQyxHLEVBQUs7QUFDdEIsVUFBSUMsSUFBSUMsU0FBU0MsYUFBVCxDQUF1QixRQUF2QixDQUFSO0FBQ0FGLFFBQUVHLFlBQUYsQ0FBZSxLQUFmLEVBQXNCSixHQUF0QjtBQUNBRSxlQUFTRyxJQUFULENBQWNDLFdBQWQsQ0FBMEJMLENBQTFCO0FBQ0g7O0FBR0Q7Ozs7OztpQ0FHYU0sUSxFQUFVO0FBQ25CLFVBQUlDLElBQUlOLFNBQVNDLGFBQVQsQ0FBdUIsUUFBdkIsQ0FBUjtBQUNBSyxRQUFFQyxLQUFGLEdBQVVGLFFBQVY7QUFDQUwsZUFBU0csSUFBVCxDQUFjQyxXQUFkLENBQTBCRSxDQUExQjtBQUNIOztBQUVEOzs7Ozs7Ozs7cUNBTWlCRSxNLEVBQVE7QUFDckIsYUFBT0EsT0FBT0MsT0FBUCxDQUFlLEtBQWYsRUFBc0IsRUFBdEIsQ0FBUDtBQUNIOztBQUVEOzs7Ozs7Ozs7OzsrQkFRV0MsRyxFQUFLO0FBQ1osVUFBSUMsT0FBTyxJQUFJQyxjQUFKLEVBQVg7QUFDQUQsV0FBS0UsSUFBTCxDQUFVLE1BQVYsRUFBa0JILEdBQWxCLEVBQXVCLEtBQXZCO0FBQ0FDLFdBQUtHLElBQUw7QUFDQSxhQUFPSCxLQUFLSSxNQUFMLElBQWUsR0FBdEI7QUFDSDs7QUFFRDs7Ozs7Ozs7a0NBS2NMLEcsRUFBS00sTyxFQUFRO0FBQ3ZCLFVBQUlDLFNBQVNDLE9BQU9MLElBQVAsQ0FBWUgsR0FBWixFQUFpQixRQUFqQixFQUEyQk0sT0FBM0IsQ0FBYjtBQUNBLFVBQUlHLFVBQVUsQ0FBQ0YsTUFBRCxJQUFXQSxPQUFPRyxNQUFsQixJQUE0QixPQUFPSCxPQUFPRyxNQUFkLElBQXNCLFdBQWhFOztBQUVBLGFBQU8sQ0FBQ0QsT0FBUjtBQUNIOzs7Ozs7QUFJTCxJQUFJRSxRQUFRLElBQUl4QixlQUFKLEVBQVo7a0JBQ2V3QixLIiwiZmlsZSI6Ii4vanMvc2hpcHRpbWl6ZS11dGlscy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBcbiAqIFNpbmdsZXRvbiBvYmplY3Qgd2UgY2FuIHVzZSBmb3IgcGxhdGZvcm0gaW5kZXBlbmRlbnQgc3R1ZmYgXG4gKi9cbmNsYXNzIFNoaXB0aW1pemVVdGlscyB7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcblxuICAgIH1cblxuXG4gICAgLyoqIFxuICAgICAqIEluamVjdCBTY3JpcHQgaW50byB0aGUgcGFnZSBcbiAgICAgKiBAcGFyYW0gc3RyaW5nIHNyYyBcbiAgICAgKi9cbiAgICBpbmplY3RFeHRlcm5hbFNjcmlwdChzcmMpIHtcbiAgICAgICAgbGV0IHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgICAgICBzLnNldEF0dHJpYnV0ZShcInNyY1wiLCBzcmMpO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHMpO1xuICAgIH1cblxuXG4gICAgLyoqIFxuICAgICAqIEluamVjdCBhIHNjcmlwdCBzdHJpbmcgXG4gICAgICovXG4gICAgaW5qZWN0U2NyaXB0KGNvbnRlbnRzKSB7XG4gICAgICAgIGxldCBlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcbiAgICAgICAgZS52YWx1ZSA9IGNvbnRlbnRzO1xuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGUpO1xuICAgIH1cblxuICAgIC8qKiBcbiAgICAgKiBSZW1vdmVzIGFsbCBub3QgbnVtZXJpYyBjaGFycyBmcm9tIHRoZSBzdHJpbmcgXG4gICAgICpcbiAgICAgKiBAcGFyYW0gc3RyaW5nIHN0cmluZyAtIHRoZSBpbnB1dCBzdHJpbmcgXG4gICAgICogQHJldHVybiB0aGUgc3RyaW5nIHdpdGhvdXQgY2hhcnMgdGhhdCBhcmUgbm90IG51bWJlcnMgXG4gICAgICovXG4gICAgcmVtb3ZlTm9uTnVtZXJpYyhzdHJpbmcpIHtcbiAgICAgICAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC9cXEQvZywgJycpO1xuICAgIH1cblxuICAgIC8qKiBcbiAgICAgKiBDaGVjayBpZiB0aGUgZ2l2ZW4gdXJsIGV4aXN0cyBhbmQgaXMgdmFsaWRcbiAgICAgKiBXZSB1c2UgdGhpcyB0byBjaGVjayBpZiB0aGUgY2FycmllciBpY29uIGV4aXN0cyBnaXZlbiBcbiAgICAgKiBhIHVybCBwYXRoIGFuZCB0aGUgbmFtaW5nIGNvbnZlbnRpb24ge2NhcnJpZXJfaWR9LnN2ZyBcbiAgICAgKiBNYWtlIHN1cmUgdGhlIGNvcnJlY3QgcHJvdG9jb2wgaXMgYXBwZW5kZWQgdG8gdGhlIHVybCBodHRwICE9IGh0dHBzIFxuICAgICAqIFxuICAgICAqIEByZXR1cm4gdHJ1ZSBpdCB0aGUgdXJsIGV4aXN0cyBhbmQgaXMgdmFsaWQgXG4gICAgICovIFxuICAgIGlzVXJsVmFsaWQodXJsKSB7XG4gICAgICAgIHZhciBodHRwID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICAgIGh0dHAub3BlbignSEVBRCcsIHVybCwgZmFsc2UpO1xuICAgICAgICBodHRwLnNlbmQoKTtcbiAgICAgICAgcmV0dXJuIGh0dHAuc3RhdHVzID09IDIwMDtcbiAgICB9XG5cbiAgICAvKiogXG4gICAgICogT3BlbiBhIG5ldyB3aW5kb3cgd2l0aCB0aGUgcHJvdmlkZWQgVVJMIFxuICAgICAqIEBzdHJpbmcgdXJsIFxuICAgICAqIEByZXR1cm4gYm9vbCBpZiB0aGUgd2luZG93IHdhcyBvcGVuZWQsIGZhbHNlIGlmIHBvcHVwIGJsb2NrZXIgZW5hYmxlZCBcbiAgICAgKi8gIFxuICAgIG9wZW5OZXdXaW5kb3codXJsLCBvcHRpb25zKXtcbiAgICAgICAgbGV0IG5ld1dpbiA9IHdpbmRvdy5vcGVuKHVybCwgJ19ibGFuaycsIG9wdGlvbnMpOyBcbiAgICAgICAgbGV0IGJsb2NrZWQgPSAhbmV3V2luIHx8IG5ld1dpbi5jbG9zZWQgfHwgdHlwZW9mIG5ld1dpbi5jbG9zZWQ9PSd1bmRlZmluZWQnOyBcblxuICAgICAgICByZXR1cm4gIWJsb2NrZWQ7IFxuICAgIH1cbn1cblxuXG5sZXQgdXRpbHMgPSBuZXcgU2hpcHRpbWl6ZVV0aWxzKCk7XG5leHBvcnQgZGVmYXVsdCB1dGlsczsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./js/shiptimize-utils.js\n");

/***/ }),

/***/ "./js/shiptimize-woo-commerce.js":
/*!***************************************!*\
  !*** ./js/shiptimize-woo-commerce.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _shiptimizeUtils = __webpack_require__(/*! ./shiptimize-utils.js */ \"./js/shiptimize-utils.js\");\n\nvar _shiptimizeUtils2 = _interopRequireDefault(_shiptimizeUtils);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Woocommerce = function () {\n    function Woocommerce(ajax_url) {\n        _classCallCheck(this, Woocommerce);\n\n        this.ajax_url = ajax_url;\n    }\n\n    /** \n     * @return true if this is the checkout page \n     */\n\n\n    _createClass(Woocommerce, [{\n        key: 'isCheckout',\n        value: function isCheckout() {\n            return jQuery(\"body\").hasClass('woocommerce-checkout');\n        }\n\n        /* \n         * If there is only one method available woo will use a hidden field for the selected carrier \n         *  + Generic Methods do not have an instance id \n         */\n\n    }, {\n        key: 'getShippingMethodId',\n        value: function getShippingMethodId() {\n\n            var eCheckbox = jQuery(\"input[name='shipping_method[0]']:checked\");\n            var eHidden = jQuery(\"input[name='shipping_method[0]']\");\n\n            var shippingMethod = eCheckbox.length > 0 ? eCheckbox.val() : eHidden.val();\n\n            if (shippingMethod.indexOf(':') > 0) {\n                var method_parts = shippingMethod.split(':');\n                return _shiptimizeUtils2.default.removeNonNumeric(method_parts[0]);\n            } else {\n                return shippingMethod;\n            }\n        }\n\n        /** \n         * Wordpress won't send session cookies to wp-admin and the session handling in woocommerce is so poorly documented we are better off \n         * extracting necessary info client side our selves. We're emulating their checkout.js \n         * @return an object containing address parts \n         */\n\n    }, {\n        key: 'getShippingData',\n        value: function getShippingData() {\n\n            var country = jQuery('#billing_country').val(),\n                state = jQuery('#billing_state').val(),\n                postcode = jQuery('input#billing_postcode').val(),\n                city = jQuery('#billing_city').val(),\n                address = jQuery('input#billing_address_1').val(),\n                address_2 = jQuery('input#billing_address_2').val(),\n                s_country = country,\n                s_state = state,\n                s_postcode = postcode,\n                s_city = city,\n                s_address = address,\n                s_address_2 = address_2;\n\n            if (jQuery('#ship-to-different-address').find('input').is(':checked')) {\n                s_country = jQuery('#shipping_country').val();\n                s_state = jQuery('#shipping_state').val();\n                s_postcode = jQuery('input#shipping_postcode').val();\n                s_city = jQuery('#shipping_city').val();\n                s_address = jQuery('input#shipping_address_1').val();\n                s_address_2 = jQuery('input#shipping_address_2').val();\n            }\n\n            return {\n                \"Address\": {\n                    \"Lat\": \"\",\n                    \"Long\": \"\",\n                    \"Streetname1\": s_address,\n                    \"Streetname2\": s_address_2,\n                    \"HouseNumber\": '',\n                    \"NumberExtension\": '',\n                    \"PostalCode\": s_postcode,\n                    \"s_postcode\": s_postcode,\n                    \"City\": s_city,\n                    \"Country\": s_country,\n                    \"State\": s_state\n\n                },\n                post_data: jQuery('form.checkout').serialize(),\n                \"CarrierId\": this.carrier_id\n            };\n        }\n\n        /** \n         * We must run this onload \n         * And on method change \n         * because people may never change the carrier or select a pickup point \n         */\n\n    }, {\n        key: 'setCarrier',\n        value: function setCarrier(carrier_id) {\n            this.carrier_id = typeof carrier_id != 'undefined' ? carrier_id : this.getShippingMethodId();\n            jQuery(\"#shipping_carrier_id\").val(this.carrier_id);\n        }\n\n        /** \n         * @param Pickup pickup \n         */\n\n    }, {\n        key: 'setPickupPoint',\n        value: function setPickupPoint(pickup) {\n            var pickup_label = pickup.Information.Name + \" \" + pickup.Information.Address;\n\n            jQuery(\".shiptimize-pickup__description\").html(shiptimize_selected_pickup + \" : \" + pickup_label);\n            jQuery(\"#shipping_pickup_id\").val(pickup.PointId);\n            jQuery(\"#shipping_pickup_label\").val(pickup_label);\n\n            jQuery(\"#shiptimizepickup\").val(pickup.PointId);\n        }\n    }]);\n\n    return Woocommerce;\n}();\n\nexports.default = Woocommerce;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./js/shiptimize-woo-commerce.js\n");

/***/ }),

/***/ "./scss/shiptimize.scss":
/*!******************************!*\
  !*** ./scss/shiptimize.scss ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zY3NzL3NoaXB0aW1pemUuc2Nzcz9lYzk3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ii4vc2Nzcy9zaGlwdGltaXplLnNjc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./scss/shiptimize.scss\n");

/***/ }),

/***/ "./shiptmize.js":
/*!**********************!*\
  !*** ./shiptmize.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__webpack_require__(/*! ./scss/shiptimize.scss */ \"./scss/shiptimize.scss\");\n\n__webpack_require__(/*! ./css/leaflet.css */ \"./css/leaflet.css\");\n\nvar _shiptimizeUtils = __webpack_require__(/*! ./js/shiptimize-utils.js */ \"./js/shiptimize-utils.js\");\n\nvar _shiptimizeUtils2 = _interopRequireDefault(_shiptimizeUtils);\n\nvar _shiptimizeWooCommerce = __webpack_require__(/*! ./js/shiptimize-woo-commerce.js */ \"./js/shiptimize-woo-commerce.js\");\n\nvar _shiptimizeWooCommerce2 = _interopRequireDefault(_shiptimizeWooCommerce);\n\nvar _shiptimizeGmaps = __webpack_require__(/*! ./js/shiptimize-gmaps.js */ \"./js/shiptimize-gmaps.js\");\n\nvar _shiptimizeGmaps2 = _interopRequireDefault(_shiptimizeGmaps);\n\nvar _shiptimizeOpenMap = __webpack_require__(/*! ./js/shiptimize-open-map.js */ \"./js/shiptimize-open-map.js\");\n\nvar _shiptimizeOpenMap2 = _interopRequireDefault(_shiptimizeOpenMap);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/** \n * Class Shiptimize depends on jQuery. \n * Check if we are meant to append a map \n * \n * Platform dependent functions marked with   * @platformDependent \n */\nvar Shiptimize = function () {\n    function Shiptimize(ajax_url) {\n        _classCallCheck(this, Shiptimize);\n\n        this.markers = []; //pickup {lat, lng} \n        this.isMapLoaded = false;\n        this.gmaps_key = typeof shiptimize_maps_key == 'undefined' ? '' : shiptimize_maps_key;\n        this.openMapMarkerIcons = {};\n        this.ajax_url = ajax_url; // platform dependent \n\n        this.platform = new _shiptimizeWooCommerce2.default(this.ajax_url);\n\n        this.map = this.gmaps_key ? new _shiptimizeGmaps2.default(this.gmaps_key) : new _shiptimizeOpenMap2.default();\n        this.platform.isCheckout();\n        this.map.grantReady();\n    }\n\n    /** \n     * Show the map to the user \n     */\n\n\n    _createClass(Shiptimize, [{\n        key: 'showMap',\n        value: function showMap() {\n            this.userScroll = jQuery('html,body').scrollTop();\n            jQuery('html,body').scrollTop(0);\n            jQuery(\".shiptimize-pickup\").addClass(\"active\");\n        }\n\n        /** \n         * Hide the map   \n         */\n\n    }, {\n        key: 'hideMap',\n        value: function hideMap() {\n            jQuery(\".shiptimize-pickup\").removeClass(\"active\");\n            jQuery(\".shiptimize-pickup__error\").hide();\n            jQuery('html,body').scrollTop(this.userScroll);\n        }\n    }, {\n        key: 'clearMarkers',\n        value: function clearMarkers() {\n            this.map.clearMarkers();\n        }\n\n        /** \n         * Generate the inputs for the user to append extra info if necessary \n         * The id of these fields is in the format shiptimize_extra_{PointId}_{FieldId}\n         */\n\n    }, {\n        key: 'getExtendedInfoHtml',\n        value: function getExtendedInfoHtml(pickupPoint) {\n            if (!pickupPoint.ExtendedInfo || typeof pickupPoint.ExtendedInfo.length == 'undefined') {\n                return \"\";\n            }\n\n            var html = '';\n\n            for (var x = 0; pickupPoint.ExtendedInfo && x < pickupPoint.ExtendedInfo.length; ++x) {\n                var extraInfo = pickupPoint.ExtendedInfo[x];\n                html += '<div class=\"shiptimize-pickup__extended\">' + '<label class=\"shiptimize-pickup__extended_label \">' + extraInfo.Tekst + '</label>' + '<input type=\"text\" name=\"shiptimize_pickup_extended_value\" value=\"\" id=\"shiptimize_extra_' + pickupPoint.PointId + '_' + extraInfo.FieldId + '\"/> ' + '<input type=\"hidden\" name=\"shiptimize_pickup_extended_id\" id=\"shiptimize_pickup\" value=\"' + extraInfo.FieldId + '\"/> ' + '</div>';\n            }\n\n            return html;\n        }\n\n        /**\n         * Reset all markers  \n         * Select the marker of index idx in map \n         */\n\n    }, {\n        key: 'selectPointFromListInMap',\n        value: function selectPointFromListInMap(idx) {\n            jQuery(\"input[name='shiptimize__point']\").prop('checked', false);\n            this.map.selectMarkerByIdx(idx);\n\n            jQuery(jQuery(\"input[name='shiptimize__point']\").get(idx)).prop('checked', true);\n        }\n\n        /** \n         * When the user clicks the validate button \n         */\n\n    }, {\n        key: 'selectFromList',\n        value: function selectFromList() {\n            var idx = jQuery(\"input[name='shiptimize__point']:checked\").val();\n            var pickup = this.pickupPoints[idx];\n            var extra = '';\n\n            for (var i = 0; pickup.ExtendedInfo && i < pickup.ExtendedInfo.length; ++i) {\n                extra += \"<br/>\" + pickup.ExtendedInfo[i].Tekst + ': ' + jQuery(\"#shiptimize_extra_\" + pickup.PointId + \"_\" + pickup.ExtendedInfo[i].FieldId).val();\n            }\n\n            jQuery(\".shiptimize-pickup__description\").html(shiptimize_selected_pickup + \" : \" + pickup.Information.Name + \" \" + pickup.Information.Address + \" \" + extra);\n\n            this.platform.setPickupPoint(pickup);\n            this.hideMap();\n        }\n\n        /** \n         *  Returns the distance between 2 (lat,lng) points in kms \n         */\n\n    }, {\n        key: 'getDistance',\n        value: function getDistance(latlng, latlng2) {\n\n            var R = 6371e3; // metres\n            var φ1 = latlng.lat().toRadians();\n            var φ2 = latlng2.lng().toRadians();\n\n            var Δφ = (latln2.lat() - latlng.lng()).toRadians();\n            var Δλ = (latln2.lng() - latlng.lon()).toRadians();\n\n            var a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n            var d = Math.floor(R * c / 1000);\n        }\n\n        /** \n         * Show the map and query the server for pickup locations near the shipping address provided by the client\n         * center the map on the first point \n         * remove old markers \n         * add the new markers  \n         */\n\n    }, {\n        key: 'getPickupLocations',\n        value: function getPickupLocations(evt) {\n            var _this = this;\n\n            if (!this.map || !this.map.isScriptLoaded) {\n                console.log(\"map is not loaded ...\");\n                return;\n            }\n\n            this.pickupPointsLoadStart();\n\n            /** because some version of woo will trigger a call to checkout and finish  the order **/\n            evt.preventDefault();\n            evt.stopPropagation();\n\n            this.showMap();\n\n            var data = this.platform.getShippingData();\n            data.action = 'shiptimize_pickup_locations';\n\n            this.map.setCarrierIcon(data.CarrierId);\n\n            this.map.geocode(data, function (geocode) {\n                _this.getPickupLocationsFromGeocodedAddr(geocode, data);\n            });\n        }\n    }, {\n        key: 'getPickupLocationsFromGeocodedAddr',\n        value: function getPickupLocationsFromGeocodedAddr(geocode, data) {\n            var _this2 = this;\n\n            this.resetUI();\n\n            if (!geocode.lng || !geocode.lat) {\n                this.pickupPointsLoadStop();\n                this.pickupError(shiptimize_geolocationfailed);\n                return;\n            }\n\n            data.Address.Country = geocode.iso2;\n            data.Address.Long = geocode.lng;\n            data.Address.Lat = geocode.lat;\n\n            console.log(data);\n            console.log(geocode);\n\n            jQuery.getJSON(this.ajax_url, data, function (pickupPoints) {\n                // We have the points remove the loader \n                _this2.pickupPointsLoadStop();\n\n                if (pickupPoints.length == 0) {\n                    console.log(\"no pickup points found for this address \");\n                    return;\n                }\n\n                console.log(pickupPoints);\n                if (pickupPoints.Error.Id == 0 && pickupPoints.Point.length > 0) {\n                    jQuery(\".shiptimize-pickup__options,.shiptimize-pickup__map\").show();\n                    _this2.setPickupLocations(pickupPoints.Point);\n                } else {\n                    console.log(\"The api returned an error: \", pickupPoints.Error); //pickupPoints.Error.Info || \n                    _this2.pickupError(shiptimize_no_points_found);\n                }\n            }).fail(function (resp) {\n                console.log(\"Error getting points, shiptimize api error? report to shiptimize. \", resp.responseText); //pickupPoints.Error.Info || \n                _this2.pickupError(shiptimize_no_points_found);\n            });\n        }\n    }, {\n        key: 'resetUI',\n        value: function resetUI() {\n            jQuery(\".shiptimize-pickup__error\").hide();\n            this.map.clearMarkers();\n        }\n\n        /** \n         * @param string info - the message to display \n         */\n\n    }, {\n        key: 'pickupError',\n        value: function pickupError(info) {\n            this.pickupPoints = [];\n\n            var eError = jQuery(\".shiptimize-pickup__error\");\n            eError.html(info);\n            eError.show();\n\n            jQuery(\".shiptimize-pickup__options,.shiptimize-pickup__map\").hide();\n        }\n\n        /** \n         * Append the pickup Locations to the map\n         * @param array pickupPoints - an array of available pickup points \n         */\n\n    }, {\n        key: 'setPickupLocations',\n        value: function setPickupLocations(pickupPoints) {\n            var _this3 = this;\n\n            jQuery(\".shiptimize-pickup__error\").hide();\n\n            this.pickupPoints = pickupPoints;\n            this.map.clearMarkers();\n            this.map.centerMap(this.pickupPoints[0].Lat, this.pickupPoints[1].Long);\n            this.map.addMarkers(pickupPoints, function (idx) {\n                _this3.selectPointFromListInMap(idx);\n            });\n            this.setOptionsForAddress(pickupPoints);\n\n            typeof this.map.map.invalidateSize != 'undefined' && this.map.map.invalidateSize();\n\n            setTimeout(function () {\n                _this3.map.fitBounds();\n            }, 200);\n        }\n\n        /** \n         * @param pickupPoints[] - [] of pickup points returned by the api \n         */\n\n    }, {\n        key: 'setOptionsForAddress',\n        value: function setOptionsForAddress(pickupPoints) {\n\n            var html = '';\n            for (var i = 0; i < pickupPoints.length; ++i) {\n                html += '<div class=\"shiptimize-pickup__point\">' + '<input type=\"radio\" value=\"' + i + '\" name=\"shiptimize__point\"  onclick=\"shiptimize.selectPointFromListInMap(' + i + ')\"/>' + '<span class=\"shiptimize-pickup__point_description\" onclick=\"shiptimize.selectPointFromListInMap(' + i + ')\">' + '<span>' + (pickupPoints[i].Information.Name ? pickupPoints[i].Information.Name + '<br/>' : '') + pickupPoints[i].Information.Address + '</span>' + this.getExtendedInfoHtml(pickupPoints[i]) + '</span>' + '</div>';\n            }\n            console.log(html);\n\n            jQuery(\".shiptimize-pickup__other\").html(html);\n        }\n    }, {\n        key: 'loadMap',\n        value: function loadMap() {\n            this.map.loadMap();\n        }\n    }, {\n        key: 'pickupPointsLoadStart',\n        value: function pickupPointsLoadStart() {\n            jQuery(\".shiptimize-pickup__mapWrapper\").addClass('loading');\n        }\n    }, {\n        key: 'pickupPointsLoadStop',\n        value: function pickupPointsLoadStop() {\n            jQuery(\".shiptimize-pickup__mapWrapper\").removeClass('loading');\n        }\n    }]);\n\n    return Shiptimize;\n}();\n\njQuery(function () {\n    if (typeof woocommerce_params != 'undefined') {\n        window.shiptimize = new Shiptimize(woocommerce_params.ajax_url);\n    }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./shiptmize.js\n");

/***/ })

/******/ });